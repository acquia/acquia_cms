-
  type: file
  export:
    fid: '171'
    uuid: 9d23085d-2799-4b73-947c-af21184090ef
    langcode: en
    filename: selection.json
    uri: 'public://cohesion/selection.json'
    filemime: application/octet-stream
    filesize: '51338'
    status: '1'
    created: '1611976636'
    changed: '1611976636'
    content: {
    "success": "[\n    {\n        \"code\": 61545,\n        \"tags\": \"asterisk\"\n    },\n    {\n        \"code\": 61543,\n        \"tags\": \"plus\"\n    },\n    {\n        \"code\": 61736,\n        \"tags\": \"question\"\n    },\n    {\n        \"code\": 61544,\n        \"tags\": \"minus\"\n    },\n    {\n        \"code\": 61440,\n        \"tags\": \"glass\"\n    },\n    {\n        \"code\": 61441,\n        \"tags\": \"music\"\n    },\n    {\n        \"code\": 61442,\n        \"tags\": \"search\"\n    },\n    {\n        \"code\": 61443,\n        \"tags\": \"envelope-o\"\n    },\n    {\n        \"code\": 61444,\n        \"tags\": \"heart\"\n    },\n    {\n        \"code\": 61445,\n        \"tags\": \"star\"\n    },\n    {\n        \"code\": 61446,\n        \"tags\": \"star-o\"\n    },\n    {\n        \"code\": 61447,\n        \"tags\": \"user\"\n    },\n    {\n        \"code\": 61448,\n        \"tags\": \"film\"\n    },\n    {\n        \"code\": 61449,\n        \"tags\": \"th-large\"\n    },\n    {\n        \"code\": 61450,\n        \"tags\": \"th\"\n    },\n    {\n        \"code\": 61451,\n        \"tags\": \"th-list\"\n    },\n    {\n        \"code\": 61452,\n        \"tags\": \"check\"\n    },\n    {\n        \"code\": 61453,\n        \"tags\": \"close, remove, times\"\n    },\n    {\n        \"code\": 61454,\n        \"tags\": \"search-plus\"\n    },\n    {\n        \"code\": 61456,\n        \"tags\": \"search-minus\"\n    },\n    {\n        \"code\": 61457,\n        \"tags\": \"power-off\"\n    },\n    {\n        \"code\": 61458,\n        \"tags\": \"signal\"\n    },\n    {\n        \"code\": 61459,\n        \"tags\": \"cog, gear\"\n    },\n    {\n        \"code\": 61460,\n        \"tags\": \"trash-o\"\n    },\n    {\n        \"code\": 61461,\n        \"tags\": \"home\"\n    },\n    {\n        \"code\": 61462,\n        \"tags\": \"file-o\"\n    },\n    {\n        \"code\": 61463,\n        \"tags\": \"clock-o\"\n    },\n    {\n        \"code\": 61464,\n        \"tags\": \"road\"\n    },\n    {\n        \"code\": 61465,\n        \"tags\": \"download\"\n    },\n    {\n        \"code\": 61466,\n        \"tags\": \"arrow-circle-o-down\"\n    },\n    {\n        \"code\": 61467,\n        \"tags\": \"arrow-circle-o-up\"\n    },\n    {\n        \"code\": 61468,\n        \"tags\": \"inbox\"\n    },\n    {\n        \"code\": 61469,\n        \"tags\": \"play-circle-o\"\n    },\n    {\n        \"code\": 61470,\n        \"tags\": \"repeat, rotate-right\"\n    },\n    {\n        \"code\": 61473,\n        \"tags\": \"refresh\"\n    },\n    {\n        \"code\": 61474,\n        \"tags\": \"list-alt\"\n    },\n    {\n        \"code\": 61475,\n        \"tags\": \"lock\"\n    },\n    {\n        \"code\": 61476,\n        \"tags\": \"flag\"\n    },\n    {\n        \"code\": 61477,\n        \"tags\": \"headphones\"\n    },\n    {\n        \"code\": 61478,\n        \"tags\": \"volume-off\"\n    },\n    {\n        \"code\": 61479,\n        \"tags\": \"volume-down\"\n    },\n    {\n        \"code\": 61480,\n        \"tags\": \"volume-up\"\n    },\n    {\n        \"code\": 61481,\n        \"tags\": \"qrcode\"\n    },\n    {\n        \"code\": 61482,\n        \"tags\": \"barcode\"\n    },\n    {\n        \"code\": 61483,\n        \"tags\": \"tag\"\n    },\n    {\n        \"code\": 61484,\n        \"tags\": \"tags\"\n    },\n    {\n        \"code\": 61485,\n        \"tags\": \"book\"\n    },\n    {\n        \"code\": 61486,\n        \"tags\": \"bookmark\"\n    },\n    {\n        \"code\": 61487,\n        \"tags\": \"print\"\n    },\n    {\n        \"code\": 61488,\n        \"tags\": \"camera\"\n    },\n    {\n        \"code\": 61489,\n        \"tags\": \"font\"\n    },\n    {\n        \"code\": 61490,\n        \"tags\": \"bold\"\n    },\n    {\n        \"code\": 61491,\n        \"tags\": \"italic\"\n    },\n    {\n        \"code\": 61492,\n        \"tags\": \"text-height\"\n    },\n    {\n        \"code\": 61493,\n        \"tags\": \"text-width\"\n    },\n    {\n        \"code\": 61494,\n        \"tags\": \"align-left\"\n    },\n    {\n        \"code\": 61495,\n        \"tags\": \"align-center\"\n    },\n    {\n        \"code\": 61496,\n        \"tags\": \"align-right\"\n    },\n    {\n        \"code\": 61497,\n        \"tags\": \"align-justify\"\n    },\n    {\n        \"code\": 61498,\n        \"tags\": \"list\"\n    },\n    {\n        \"code\": 61499,\n        \"tags\": \"dedent, outdent\"\n    },\n    {\n        \"code\": 61500,\n        \"tags\": \"indent\"\n    },\n    {\n        \"code\": 61501,\n        \"tags\": \"video-camera\"\n    },\n    {\n        \"code\": 61502,\n        \"tags\": \"image, photo, picture-o\"\n    },\n    {\n        \"code\": 61504,\n        \"tags\": \"pencil\"\n    },\n    {\n        \"code\": 61505,\n        \"tags\": \"map-marker\"\n    },\n    {\n        \"code\": 61506,\n        \"tags\": \"adjust\"\n    },\n    {\n        \"code\": 61507,\n        \"tags\": \"tint\"\n    },\n    {\n        \"code\": 61508,\n        \"tags\": \"edit, pencil-square-o\"\n    },\n    {\n        \"code\": 61509,\n        \"tags\": \"share-square-o\"\n    },\n    {\n        \"code\": 61510,\n        \"tags\": \"check-square-o\"\n    },\n    {\n        \"code\": 61511,\n        \"tags\": \"arrows\"\n    },\n    {\n        \"code\": 61512,\n        \"tags\": \"step-backward\"\n    },\n    {\n        \"code\": 61513,\n        \"tags\": \"fast-backward\"\n    },\n    {\n        \"code\": 61514,\n        \"tags\": \"backward\"\n    },\n    {\n        \"code\": 61515,\n        \"tags\": \"play\"\n    },\n    {\n        \"code\": 61516,\n        \"tags\": \"pause\"\n    },\n    {\n        \"code\": 61517,\n        \"tags\": \"stop\"\n    },\n    {\n        \"code\": 61518,\n        \"tags\": \"forward\"\n    },\n    {\n        \"code\": 61520,\n        \"tags\": \"fast-forward\"\n    },\n    {\n        \"code\": 61521,\n        \"tags\": \"step-forward\"\n    },\n    {\n        \"code\": 61522,\n        \"tags\": \"eject\"\n    },\n    {\n        \"code\": 61523,\n        \"tags\": \"chevron-left\"\n    },\n    {\n        \"code\": 61524,\n        \"tags\": \"chevron-right\"\n    },\n    {\n        \"code\": 61525,\n        \"tags\": \"plus-circle\"\n    },\n    {\n        \"code\": 61526,\n        \"tags\": \"minus-circle\"\n    },\n    {\n        \"code\": 61527,\n        \"tags\": \"times-circle\"\n    },\n    {\n        \"code\": 61528,\n        \"tags\": \"check-circle\"\n    },\n    {\n        \"code\": 61529,\n        \"tags\": \"question-circle\"\n    },\n    {\n        \"code\": 61530,\n        \"tags\": \"info-circle\"\n    },\n    {\n        \"code\": 61531,\n        \"tags\": \"crosshairs\"\n    },\n    {\n        \"code\": 61532,\n        \"tags\": \"times-circle-o\"\n    },\n    {\n        \"code\": 61533,\n        \"tags\": \"check-circle-o\"\n    },\n    {\n        \"code\": 61534,\n        \"tags\": \"ban\"\n    },\n    {\n        \"code\": 61536,\n        \"tags\": \"arrow-left\"\n    },\n    {\n        \"code\": 61537,\n        \"tags\": \"arrow-right\"\n    },\n    {\n        \"code\": 61538,\n        \"tags\": \"arrow-up\"\n    },\n    {\n        \"code\": 61539,\n        \"tags\": \"arrow-down\"\n    },\n    {\n        \"code\": 61540,\n        \"tags\": \"mail-forward, share\"\n    },\n    {\n        \"code\": 61541,\n        \"tags\": \"expand\"\n    },\n    {\n        \"code\": 61542,\n        \"tags\": \"compress\"\n    },\n    {\n        \"code\": 61546,\n        \"tags\": \"exclamation-circle\"\n    },\n    {\n        \"code\": 61547,\n        \"tags\": \"gift\"\n    },\n    {\n        \"code\": 61548,\n        \"tags\": \"leaf\"\n    },\n    {\n        \"code\": 61549,\n        \"tags\": \"fire\"\n    },\n    {\n        \"code\": 61550,\n        \"tags\": \"eye\"\n    },\n    {\n        \"code\": 61552,\n        \"tags\": \"eye-slash\"\n    },\n    {\n        \"code\": 61553,\n        \"tags\": \"exclamation-triangle, warning\"\n    },\n    {\n        \"code\": 61554,\n        \"tags\": \"plane\"\n    },\n    {\n        \"code\": 61555,\n        \"tags\": \"calendar\"\n    },\n    {\n        \"code\": 61556,\n        \"tags\": \"random\"\n    },\n    {\n        \"code\": 61557,\n        \"tags\": \"comment\"\n    },\n    {\n        \"code\": 61558,\n        \"tags\": \"magnet\"\n    },\n    {\n        \"code\": 61559,\n        \"tags\": \"chevron-up\"\n    },\n    {\n        \"code\": 61560,\n        \"tags\": \"chevron-down\"\n    },\n    {\n        \"code\": 61561,\n        \"tags\": \"retweet\"\n    },\n    {\n        \"code\": 61562,\n        \"tags\": \"shopping-cart\"\n    },\n    {\n        \"code\": 61563,\n        \"tags\": \"folder\"\n    },\n    {\n        \"code\": 61564,\n        \"tags\": \"folder-open\"\n    },\n    {\n        \"code\": 61565,\n        \"tags\": \"arrows-v\"\n    },\n    {\n        \"code\": 61566,\n        \"tags\": \"arrows-h\"\n    },\n    {\n        \"code\": 61568,\n        \"tags\": \"bar-chart, bar-chart-o\"\n    },\n    {\n        \"code\": 61569,\n        \"tags\": \"twitter-square\"\n    },\n    {\n        \"code\": 61570,\n        \"tags\": \"facebook-square\"\n    },\n    {\n        \"code\": 61571,\n        \"tags\": \"camera-retro\"\n    },\n    {\n        \"code\": 61572,\n        \"tags\": \"key\"\n    },\n    {\n        \"code\": 61573,\n        \"tags\": \"cogs, gears\"\n    },\n    {\n        \"code\": 61574,\n        \"tags\": \"comments\"\n    },\n    {\n        \"code\": 61575,\n        \"tags\": \"thumbs-o-up\"\n    },\n    {\n        \"code\": 61576,\n        \"tags\": \"thumbs-o-down\"\n    },\n    {\n        \"code\": 61577,\n        \"tags\": \"star-half\"\n    },\n    {\n        \"code\": 61578,\n        \"tags\": \"heart-o\"\n    },\n    {\n        \"code\": 61579,\n        \"tags\": \"sign-out\"\n    },\n    {\n        \"code\": 61580,\n        \"tags\": \"linkedin-square\"\n    },\n    {\n        \"code\": 61581,\n        \"tags\": \"thumb-tack\"\n    },\n    {\n        \"code\": 61582,\n        \"tags\": \"external-link\"\n    },\n    {\n        \"code\": 61584,\n        \"tags\": \"sign-in\"\n    },\n    {\n        \"code\": 61585,\n        \"tags\": \"trophy\"\n    },\n    {\n        \"code\": 61586,\n        \"tags\": \"github-square\"\n    },\n    {\n        \"code\": 61587,\n        \"tags\": \"upload\"\n    },\n    {\n        \"code\": 61588,\n        \"tags\": \"lemon-o\"\n    },\n    {\n        \"code\": 61589,\n        \"tags\": \"phone\"\n    },\n    {\n        \"code\": 61590,\n        \"tags\": \"square-o\"\n    },\n    {\n        \"code\": 61591,\n        \"tags\": \"bookmark-o\"\n    },\n    {\n        \"code\": 61592,\n        \"tags\": \"phone-square\"\n    },\n    {\n        \"code\": 61593,\n        \"tags\": \"twitter\"\n    },\n    {\n        \"code\": 61594,\n        \"tags\": \"facebook, facebook-f\"\n    },\n    {\n        \"code\": 61595,\n        \"tags\": \"github\"\n    },\n    {\n        \"code\": 61596,\n        \"tags\": \"unlock\"\n    },\n    {\n        \"code\": 61597,\n        \"tags\": \"credit-card\"\n    },\n    {\n        \"code\": 61598,\n        \"tags\": \"feed, rss\"\n    },\n    {\n        \"code\": 61600,\n        \"tags\": \"hdd-o\"\n    },\n    {\n        \"code\": 61601,\n        \"tags\": \"bullhorn\"\n    },\n    {\n        \"code\": 61602,\n        \"tags\": \"bell-o\"\n    },\n    {\n        \"code\": 61603,\n        \"tags\": \"certificate\"\n    },\n    {\n        \"code\": 61604,\n        \"tags\": \"hand-o-right\"\n    },\n    {\n        \"code\": 61605,\n        \"tags\": \"hand-o-left\"\n    },\n    {\n        \"code\": 61606,\n        \"tags\": \"hand-o-up\"\n    },\n    {\n        \"code\": 61607,\n        \"tags\": \"hand-o-down\"\n    },\n    {\n        \"code\": 61608,\n        \"tags\": \"arrow-circle-left\"\n    },\n    {\n        \"code\": 61609,\n        \"tags\": \"arrow-circle-right\"\n    },\n    {\n        \"code\": 61610,\n        \"tags\": \"arrow-circle-up\"\n    },\n    {\n        \"code\": 61611,\n        \"tags\": \"arrow-circle-down\"\n    },\n    {\n        \"code\": 61612,\n        \"tags\": \"globe\"\n    },\n    {\n        \"code\": 61613,\n        \"tags\": \"wrench\"\n    },\n    {\n        \"code\": 61614,\n        \"tags\": \"tasks\"\n    },\n    {\n        \"code\": 61616,\n        \"tags\": \"filter\"\n    },\n    {\n        \"code\": 61617,\n        \"tags\": \"briefcase\"\n    },\n    {\n        \"code\": 61618,\n        \"tags\": \"arrows-alt\"\n    },\n    {\n        \"code\": 61632,\n        \"tags\": \"group, users\"\n    },\n    {\n        \"code\": 61633,\n        \"tags\": \"chain, link\"\n    },\n    {\n        \"code\": 61634,\n        \"tags\": \"cloud\"\n    },\n    {\n        \"code\": 61635,\n        \"tags\": \"flask\"\n    },\n    {\n        \"code\": 61636,\n        \"tags\": \"cut, scissors\"\n    },\n    {\n        \"code\": 61637,\n        \"tags\": \"copy, files-o\"\n    },\n    {\n        \"code\": 61638,\n        \"tags\": \"paperclip\"\n    },\n    {\n        \"code\": 61639,\n        \"tags\": \"floppy-o, save\"\n    },\n    {\n        \"code\": 61640,\n        \"tags\": \"square\"\n    },\n    {\n        \"code\": 61641,\n        \"tags\": \"bars, navicon, reorder\"\n    },\n    {\n        \"code\": 61642,\n        \"tags\": \"list-ul\"\n    },\n    {\n        \"code\": 61643,\n        \"tags\": \"list-ol\"\n    },\n    {\n        \"code\": 61644,\n        \"tags\": \"strikethrough\"\n    },\n    {\n        \"code\": 61645,\n        \"tags\": \"underline\"\n    },\n    {\n        \"code\": 61646,\n        \"tags\": \"table\"\n    },\n    {\n        \"code\": 61648,\n        \"tags\": \"magic\"\n    },\n    {\n        \"code\": 61649,\n        \"tags\": \"truck\"\n    },\n    {\n        \"code\": 61650,\n        \"tags\": \"pinterest\"\n    },\n    {\n        \"code\": 61651,\n        \"tags\": \"pinterest-square\"\n    },\n    {\n        \"code\": 61652,\n        \"tags\": \"google-plus-square\"\n    },\n    {\n        \"code\": 61653,\n        \"tags\": \"google-plus\"\n    },\n    {\n        \"code\": 61654,\n        \"tags\": \"money\"\n    },\n    {\n        \"code\": 61655,\n        \"tags\": \"caret-down\"\n    },\n    {\n        \"code\": 61656,\n        \"tags\": \"caret-up\"\n    },\n    {\n        \"code\": 61657,\n        \"tags\": \"caret-left\"\n    },\n    {\n        \"code\": 61658,\n        \"tags\": \"caret-right\"\n    },\n    {\n        \"code\": 61659,\n        \"tags\": \"columns\"\n    },\n    {\n        \"code\": 61660,\n        \"tags\": \"sort, unsorted\"\n    },\n    {\n        \"code\": 61661,\n        \"tags\": \"sort-desc, sort-down\"\n    },\n    {\n        \"code\": 61662,\n        \"tags\": \"sort-asc, sort-up\"\n    },\n    {\n        \"code\": 61664,\n        \"tags\": \"envelope\"\n    },\n    {\n        \"code\": 61665,\n        \"tags\": \"linkedin\"\n    },\n    {\n        \"code\": 61666,\n        \"tags\": \"rotate-left, undo\"\n    },\n    {\n        \"code\": 61667,\n        \"tags\": \"gavel, legal\"\n    },\n    {\n        \"code\": 61668,\n        \"tags\": \"dashboard, tachometer\"\n    },\n    {\n        \"code\": 61669,\n        \"tags\": \"comment-o\"\n    },\n    {\n        \"code\": 61670,\n        \"tags\": \"comments-o\"\n    },\n    {\n        \"code\": 61671,\n        \"tags\": \"bolt, flash\"\n    },\n    {\n        \"code\": 61672,\n        \"tags\": \"sitemap\"\n    },\n    {\n        \"code\": 61673,\n        \"tags\": \"umbrella\"\n    },\n    {\n        \"code\": 61674,\n        \"tags\": \"clipboard, paste\"\n    },\n    {\n        \"code\": 61675,\n        \"tags\": \"lightbulb-o\"\n    },\n    {\n        \"code\": 61676,\n        \"tags\": \"exchange\"\n    },\n    {\n        \"code\": 61677,\n        \"tags\": \"cloud-download\"\n    },\n    {\n        \"code\": 61678,\n        \"tags\": \"cloud-upload\"\n    },\n    {\n        \"code\": 61680,\n        \"tags\": \"user-md\"\n    },\n    {\n        \"code\": 61681,\n        \"tags\": \"stethoscope\"\n    },\n    {\n        \"code\": 61682,\n        \"tags\": \"suitcase\"\n    },\n    {\n        \"code\": 61683,\n        \"tags\": \"bell\"\n    },\n    {\n        \"code\": 61684,\n        \"tags\": \"coffee\"\n    },\n    {\n        \"code\": 61685,\n        \"tags\": \"cutlery\"\n    },\n    {\n        \"code\": 61686,\n        \"tags\": \"file-text-o\"\n    },\n    {\n        \"code\": 61687,\n        \"tags\": \"building-o\"\n    },\n    {\n        \"code\": 61688,\n        \"tags\": \"hospital-o\"\n    },\n    {\n        \"code\": 61689,\n        \"tags\": \"ambulance\"\n    },\n    {\n        \"code\": 61690,\n        \"tags\": \"medkit\"\n    },\n    {\n        \"code\": 61691,\n        \"tags\": \"fighter-jet\"\n    },\n    {\n        \"code\": 61692,\n        \"tags\": \"beer\"\n    },\n    {\n        \"code\": 61693,\n        \"tags\": \"h-square\"\n    },\n    {\n        \"code\": 61694,\n        \"tags\": \"plus-square\"\n    },\n    {\n        \"code\": 61696,\n        \"tags\": \"angle-double-left\"\n    },\n    {\n        \"code\": 61697,\n        \"tags\": \"angle-double-right\"\n    },\n    {\n        \"code\": 61698,\n        \"tags\": \"angle-double-up\"\n    },\n    {\n        \"code\": 61699,\n        \"tags\": \"angle-double-down\"\n    },\n    {\n        \"code\": 61700,\n        \"tags\": \"angle-left\"\n    },\n    {\n        \"code\": 61701,\n        \"tags\": \"angle-right\"\n    },\n    {\n        \"code\": 61702,\n        \"tags\": \"angle-up\"\n    },\n    {\n        \"code\": 61703,\n        \"tags\": \"angle-down\"\n    },\n    {\n        \"code\": 61704,\n        \"tags\": \"desktop\"\n    },\n    {\n        \"code\": 61705,\n        \"tags\": \"laptop\"\n    },\n    {\n        \"code\": 61706,\n        \"tags\": \"tablet\"\n    },\n    {\n        \"code\": 61707,\n        \"tags\": \"mobile, mobile-phone\"\n    },\n    {\n        \"code\": 61708,\n        \"tags\": \"circle-o\"\n    },\n    {\n        \"code\": 61709,\n        \"tags\": \"quote-left\"\n    },\n    {\n        \"code\": 61710,\n        \"tags\": \"quote-right\"\n    },\n    {\n        \"code\": 61712,\n        \"tags\": \"spinner\"\n    },\n    {\n        \"code\": 61713,\n        \"tags\": \"circle\"\n    },\n    {\n        \"code\": 61714,\n        \"tags\": \"mail-reply, reply\"\n    },\n    {\n        \"code\": 61715,\n        \"tags\": \"github-alt\"\n    },\n    {\n        \"code\": 61716,\n        \"tags\": \"folder-o\"\n    },\n    {\n        \"code\": 61717,\n        \"tags\": \"folder-open-o\"\n    },\n    {\n        \"code\": 61720,\n        \"tags\": \"smile-o\"\n    },\n    {\n        \"code\": 61721,\n        \"tags\": \"frown-o\"\n    },\n    {\n        \"code\": 61722,\n        \"tags\": \"meh-o\"\n    },\n    {\n        \"code\": 61723,\n        \"tags\": \"gamepad\"\n    },\n    {\n        \"code\": 61724,\n        \"tags\": \"keyboard-o\"\n    },\n    {\n        \"code\": 61725,\n        \"tags\": \"flag-o\"\n    },\n    {\n        \"code\": 61726,\n        \"tags\": \"flag-checkered\"\n    },\n    {\n        \"code\": 61728,\n        \"tags\": \"terminal\"\n    },\n    {\n        \"code\": 61729,\n        \"tags\": \"code\"\n    },\n    {\n        \"code\": 61730,\n        \"tags\": \"mail-reply-all, reply-all\"\n    },\n    {\n        \"code\": 61731,\n        \"tags\": \"star-half-empty, star-half-full, star-half-o\"\n    },\n    {\n        \"code\": 61732,\n        \"tags\": \"location-arrow\"\n    },\n    {\n        \"code\": 61733,\n        \"tags\": \"crop\"\n    },\n    {\n        \"code\": 61734,\n        \"tags\": \"code-fork\"\n    },\n    {\n        \"code\": 61735,\n        \"tags\": \"chain-broken, unlink\"\n    },\n    {\n        \"code\": 61737,\n        \"tags\": \"info\"\n    },\n    {\n        \"code\": 61738,\n        \"tags\": \"exclamation\"\n    },\n    {\n        \"code\": 61739,\n        \"tags\": \"superscript\"\n    },\n    {\n        \"code\": 61740,\n        \"tags\": \"subscript\"\n    },\n    {\n        \"code\": 61741,\n        \"tags\": \"eraser\"\n    },\n    {\n        \"code\": 61742,\n        \"tags\": \"puzzle-piece\"\n    },\n    {\n        \"code\": 61744,\n        \"tags\": \"microphone\"\n    },\n    {\n        \"code\": 61745,\n        \"tags\": \"microphone-slash\"\n    },\n    {\n        \"code\": 61746,\n        \"tags\": \"shield\"\n    },\n    {\n        \"code\": 61747,\n        \"tags\": \"calendar-o\"\n    },\n    {\n        \"code\": 61748,\n        \"tags\": \"fire-extinguisher\"\n    },\n    {\n        \"code\": 61749,\n        \"tags\": \"rocket\"\n    },\n    {\n        \"code\": 61750,\n        \"tags\": \"maxcdn\"\n    },\n    {\n        \"code\": 61751,\n        \"tags\": \"chevron-circle-left\"\n    },\n    {\n        \"code\": 61752,\n        \"tags\": \"chevron-circle-right\"\n    },\n    {\n        \"code\": 61753,\n        \"tags\": \"chevron-circle-up\"\n    },\n    {\n        \"code\": 61754,\n        \"tags\": \"chevron-circle-down\"\n    },\n    {\n        \"code\": 61755,\n        \"tags\": \"html5\"\n    },\n    {\n        \"code\": 61756,\n        \"tags\": \"css3\"\n    },\n    {\n        \"code\": 61757,\n        \"tags\": \"anchor\"\n    },\n    {\n        \"code\": 61758,\n        \"tags\": \"unlock-alt\"\n    },\n    {\n        \"code\": 61760,\n        \"tags\": \"bullseye\"\n    },\n    {\n        \"code\": 61761,\n        \"tags\": \"ellipsis-h\"\n    },\n    {\n        \"code\": 61762,\n        \"tags\": \"ellipsis-v\"\n    },\n    {\n        \"code\": 61763,\n        \"tags\": \"rss-square\"\n    },\n    {\n        \"code\": 61764,\n        \"tags\": \"play-circle\"\n    },\n    {\n        \"code\": 61765,\n        \"tags\": \"ticket\"\n    },\n    {\n        \"code\": 61766,\n        \"tags\": \"minus-square\"\n    },\n    {\n        \"code\": 61767,\n        \"tags\": \"minus-square-o\"\n    },\n    {\n        \"code\": 61768,\n        \"tags\": \"level-up\"\n    },\n    {\n        \"code\": 61769,\n        \"tags\": \"level-down\"\n    },\n    {\n        \"code\": 61770,\n        \"tags\": \"check-square\"\n    },\n    {\n        \"code\": 61771,\n        \"tags\": \"pencil-square\"\n    },\n    {\n        \"code\": 61772,\n        \"tags\": \"external-link-square\"\n    },\n    {\n        \"code\": 61773,\n        \"tags\": \"share-square\"\n    },\n    {\n        \"code\": 61774,\n        \"tags\": \"compass\"\n    },\n    {\n        \"code\": 61776,\n        \"tags\": \"caret-square-o-down, toggle-down\"\n    },\n    {\n        \"code\": 61777,\n        \"tags\": \"caret-square-o-up, toggle-up\"\n    },\n    {\n        \"code\": 61778,\n        \"tags\": \"caret-square-o-right, toggle-right\"\n    },\n    {\n        \"code\": 61779,\n        \"tags\": \"eur, euro\"\n    },\n    {\n        \"code\": 61780,\n        \"tags\": \"gbp\"\n    },\n    {\n        \"code\": 61781,\n        \"tags\": \"dollar, usd\"\n    },\n    {\n        \"code\": 61782,\n        \"tags\": \"inr, rupee\"\n    },\n    {\n        \"code\": 61783,\n        \"tags\": \"cny, jpy, rmb, yen\"\n    },\n    {\n        \"code\": 61784,\n        \"tags\": \"rouble, rub, ruble\"\n    },\n    {\n        \"code\": 61785,\n        \"tags\": \"krw, won\"\n    },\n    {\n        \"code\": 61786,\n        \"tags\": \"bitcoin, btc\"\n    },\n    {\n        \"code\": 61787,\n        \"tags\": \"file\"\n    },\n    {\n        \"code\": 61788,\n        \"tags\": \"file-text\"\n    },\n    {\n        \"code\": 61789,\n        \"tags\": \"sort-alpha-asc\"\n    },\n    {\n        \"code\": 61790,\n        \"tags\": \"sort-alpha-desc\"\n    },\n    {\n        \"code\": 61792,\n        \"tags\": \"sort-amount-asc\"\n    },\n    {\n        \"code\": 61793,\n        \"tags\": \"sort-amount-desc\"\n    },\n    {\n        \"code\": 61794,\n        \"tags\": \"sort-numeric-asc\"\n    },\n    {\n        \"code\": 61795,\n        \"tags\": \"sort-numeric-desc\"\n    },\n    {\n        \"code\": 61796,\n        \"tags\": \"thumbs-up\"\n    },\n    {\n        \"code\": 61797,\n        \"tags\": \"thumbs-down\"\n    },\n    {\n        \"code\": 61798,\n        \"tags\": \"youtube-square\"\n    },\n    {\n        \"code\": 61799,\n        \"tags\": \"youtube\"\n    },\n    {\n        \"code\": 61800,\n        \"tags\": \"xing\"\n    },\n    {\n        \"code\": 61801,\n        \"tags\": \"xing-square\"\n    },\n    {\n        \"code\": 61802,\n        \"tags\": \"youtube-play\"\n    },\n    {\n        \"code\": 61803,\n        \"tags\": \"dropbox\"\n    },\n    {\n        \"code\": 61804,\n        \"tags\": \"stack-overflow\"\n    },\n    {\n        \"code\": 61805,\n        \"tags\": \"instagram\"\n    },\n    {\n        \"code\": 61806,\n        \"tags\": \"flickr\"\n    },\n    {\n        \"code\": 61808,\n        \"tags\": \"adn\"\n    },\n    {\n        \"code\": 61809,\n        \"tags\": \"bitbucket\"\n    },\n    {\n        \"code\": 61810,\n        \"tags\": \"bitbucket-square\"\n    },\n    {\n        \"code\": 61811,\n        \"tags\": \"tumblr\"\n    },\n    {\n        \"code\": 61812,\n        \"tags\": \"tumblr-square\"\n    },\n    {\n        \"code\": 61813,\n        \"tags\": \"long-arrow-down\"\n    },\n    {\n        \"code\": 61814,\n        \"tags\": \"long-arrow-up\"\n    },\n    {\n        \"code\": 61815,\n        \"tags\": \"long-arrow-left\"\n    },\n    {\n        \"code\": 61816,\n        \"tags\": \"long-arrow-right\"\n    },\n    {\n        \"code\": 61817,\n        \"tags\": \"apple\"\n    },\n    {\n        \"code\": 61818,\n        \"tags\": \"windows\"\n    },\n    {\n        \"code\": 61819,\n        \"tags\": \"android\"\n    },\n    {\n        \"code\": 61820,\n        \"tags\": \"linux\"\n    },\n    {\n        \"code\": 61821,\n        \"tags\": \"dribbble\"\n    },\n    {\n        \"code\": 61822,\n        \"tags\": \"skype\"\n    },\n    {\n        \"code\": 61824,\n        \"tags\": \"foursquare\"\n    },\n    {\n        \"code\": 61825,\n        \"tags\": \"trello\"\n    },\n    {\n        \"code\": 61826,\n        \"tags\": \"female\"\n    },\n    {\n        \"code\": 61827,\n        \"tags\": \"male\"\n    },\n    {\n        \"code\": 61828,\n        \"tags\": \"gittip, gratipay\"\n    },\n    {\n        \"code\": 61829,\n        \"tags\": \"sun-o\"\n    },\n    {\n        \"code\": 61830,\n        \"tags\": \"moon-o\"\n    },\n    {\n        \"code\": 61831,\n        \"tags\": \"archive\"\n    },\n    {\n        \"code\": 61832,\n        \"tags\": \"bug\"\n    },\n    {\n        \"code\": 61833,\n        \"tags\": \"vk\"\n    },\n    {\n        \"code\": 61834,\n        \"tags\": \"weibo\"\n    },\n    {\n        \"code\": 61835,\n        \"tags\": \"renren\"\n    },\n    {\n        \"code\": 61836,\n        \"tags\": \"pagelines\"\n    },\n    {\n        \"code\": 61837,\n        \"tags\": \"stack-exchange\"\n    },\n    {\n        \"code\": 61838,\n        \"tags\": \"arrow-circle-o-right\"\n    },\n    {\n        \"code\": 61840,\n        \"tags\": \"arrow-circle-o-left\"\n    },\n    {\n        \"code\": 61841,\n        \"tags\": \"caret-square-o-left, toggle-left\"\n    },\n    {\n        \"code\": 61842,\n        \"tags\": \"dot-circle-o\"\n    },\n    {\n        \"code\": 61843,\n        \"tags\": \"wheelchair\"\n    },\n    {\n        \"code\": 61844,\n        \"tags\": \"vimeo-square\"\n    },\n    {\n        \"code\": 61845,\n        \"tags\": \"try, turkish-lira\"\n    },\n    {\n        \"code\": 61846,\n        \"tags\": \"plus-square-o\"\n    },\n    {\n        \"code\": 61847,\n        \"tags\": \"space-shuttle\"\n    },\n    {\n        \"code\": 61848,\n        \"tags\": \"slack\"\n    },\n    {\n        \"code\": 61849,\n        \"tags\": \"envelope-square\"\n    },\n    {\n        \"code\": 61850,\n        \"tags\": \"wordpress\"\n    },\n    {\n        \"code\": 61851,\n        \"tags\": \"openid\"\n    },\n    {\n        \"code\": 61852,\n        \"tags\": \"bank, institution, university\"\n    },\n    {\n        \"code\": 61853,\n        \"tags\": \"graduation-cap, mortar-board\"\n    },\n    {\n        \"code\": 61854,\n        \"tags\": \"yahoo\"\n    },\n    {\n        \"code\": 61856,\n        \"tags\": \"google\"\n    },\n    {\n        \"code\": 61857,\n        \"tags\": \"reddit\"\n    },\n    {\n        \"code\": 61858,\n        \"tags\": \"reddit-square\"\n    },\n    {\n        \"code\": 61859,\n        \"tags\": \"stumbleupon-circle\"\n    },\n    {\n        \"code\": 61860,\n        \"tags\": \"stumbleupon\"\n    },\n    {\n        \"code\": 61861,\n        \"tags\": \"delicious\"\n    },\n    {\n        \"code\": 61862,\n        \"tags\": \"digg\"\n    },\n    {\n        \"code\": 61863,\n        \"tags\": \"pied-piper-pp\"\n    },\n    {\n        \"code\": 61864,\n        \"tags\": \"pied-piper-alt\"\n    },\n    {\n        \"code\": 61865,\n        \"tags\": \"drupal\"\n    },\n    {\n        \"code\": 61866,\n        \"tags\": \"joomla\"\n    },\n    {\n        \"code\": 61867,\n        \"tags\": \"language\"\n    },\n    {\n        \"code\": 61868,\n        \"tags\": \"fax\"\n    },\n    {\n        \"code\": 61869,\n        \"tags\": \"building\"\n    },\n    {\n        \"code\": 61870,\n        \"tags\": \"child\"\n    },\n    {\n        \"code\": 61872,\n        \"tags\": \"paw\"\n    },\n    {\n        \"code\": 61873,\n        \"tags\": \"spoon\"\n    },\n    {\n        \"code\": 61874,\n        \"tags\": \"cube\"\n    },\n    {\n        \"code\": 61875,\n        \"tags\": \"cubes\"\n    },\n    {\n        \"code\": 61876,\n        \"tags\": \"behance\"\n    },\n    {\n        \"code\": 61877,\n        \"tags\": \"behance-square\"\n    },\n    {\n        \"code\": 61878,\n        \"tags\": \"steam\"\n    },\n    {\n        \"code\": 61879,\n        \"tags\": \"steam-square\"\n    },\n    {\n        \"code\": 61880,\n        \"tags\": \"recycle\"\n    },\n    {\n        \"code\": 61881,\n        \"tags\": \"automobile, car\"\n    },\n    {\n        \"code\": 61882,\n        \"tags\": \"cab, taxi\"\n    },\n    {\n        \"code\": 61883,\n        \"tags\": \"tree\"\n    },\n    {\n        \"code\": 61884,\n        \"tags\": \"spotify\"\n    },\n    {\n        \"code\": 61885,\n        \"tags\": \"deviantart\"\n    },\n    {\n        \"code\": 61886,\n        \"tags\": \"soundcloud\"\n    },\n    {\n        \"code\": 61888,\n        \"tags\": \"database\"\n    },\n    {\n        \"code\": 61889,\n        \"tags\": \"file-pdf-o\"\n    },\n    {\n        \"code\": 61890,\n        \"tags\": \"file-word-o\"\n    },\n    {\n        \"code\": 61891,\n        \"tags\": \"file-excel-o\"\n    },\n    {\n        \"code\": 61892,\n        \"tags\": \"file-powerpoint-o\"\n    },\n    {\n        \"code\": 61893,\n        \"tags\": \"file-image-o, file-photo-o, file-picture-o\"\n    },\n    {\n        \"code\": 61894,\n        \"tags\": \"file-archive-o, file-zip-o\"\n    },\n    {\n        \"code\": 61895,\n        \"tags\": \"file-audio-o, file-sound-o\"\n    },\n    {\n        \"code\": 61896,\n        \"tags\": \"file-movie-o, file-video-o\"\n    },\n    {\n        \"code\": 61897,\n        \"tags\": \"file-code-o\"\n    },\n    {\n        \"code\": 61898,\n        \"tags\": \"vine\"\n    },\n    {\n        \"code\": 61899,\n        \"tags\": \"codepen\"\n    },\n    {\n        \"code\": 61900,\n        \"tags\": \"jsfiddle\"\n    },\n    {\n        \"code\": 61901,\n        \"tags\": \"life-bouy, life-buoy, life-ring, life-saver, support\"\n    },\n    {\n        \"code\": 61902,\n        \"tags\": \"circle-o-notch\"\n    },\n    {\n        \"code\": 61904,\n        \"tags\": \"ra, rebel, resistance\"\n    },\n    {\n        \"code\": 61905,\n        \"tags\": \"empire, ge\"\n    },\n    {\n        \"code\": 61906,\n        \"tags\": \"git-square\"\n    },\n    {\n        \"code\": 61907,\n        \"tags\": \"git\"\n    },\n    {\n        \"code\": 61908,\n        \"tags\": \"hacker-news, y-combinator-square, yc-square\"\n    },\n    {\n        \"code\": 61909,\n        \"tags\": \"tencent-weibo\"\n    },\n    {\n        \"code\": 61910,\n        \"tags\": \"qq\"\n    },\n    {\n        \"code\": 61911,\n        \"tags\": \"wechat, weixin\"\n    },\n    {\n        \"code\": 61912,\n        \"tags\": \"paper-plane, send\"\n    },\n    {\n        \"code\": 61913,\n        \"tags\": \"paper-plane-o, send-o\"\n    },\n    {\n        \"code\": 61914,\n        \"tags\": \"history\"\n    },\n    {\n        \"code\": 61915,\n        \"tags\": \"circle-thin\"\n    },\n    {\n        \"code\": 61916,\n        \"tags\": \"header\"\n    },\n    {\n        \"code\": 61917,\n        \"tags\": \"paragraph\"\n    },\n    {\n        \"code\": 61918,\n        \"tags\": \"sliders\"\n    },\n    {\n        \"code\": 61920,\n        \"tags\": \"share-alt\"\n    },\n    {\n        \"code\": 61921,\n        \"tags\": \"share-alt-square\"\n    },\n    {\n        \"code\": 61922,\n        \"tags\": \"bomb\"\n    },\n    {\n        \"code\": 61923,\n        \"tags\": \"futbol-o, soccer-ball-o\"\n    },\n    {\n        \"code\": 61924,\n        \"tags\": \"tty\"\n    },\n    {\n        \"code\": 61925,\n        \"tags\": \"binoculars\"\n    },\n    {\n        \"code\": 61926,\n        \"tags\": \"plug\"\n    },\n    {\n        \"code\": 61927,\n        \"tags\": \"slideshare\"\n    },\n    {\n        \"code\": 61928,\n        \"tags\": \"twitch\"\n    },\n    {\n        \"code\": 61929,\n        \"tags\": \"yelp\"\n    },\n    {\n        \"code\": 61930,\n        \"tags\": \"newspaper-o\"\n    },\n    {\n        \"code\": 61931,\n        \"tags\": \"wifi\"\n    },\n    {\n        \"code\": 61932,\n        \"tags\": \"calculator\"\n    },\n    {\n        \"code\": 61933,\n        \"tags\": \"paypal\"\n    },\n    {\n        \"code\": 61934,\n        \"tags\": \"google-wallet\"\n    },\n    {\n        \"code\": 61936,\n        \"tags\": \"cc-visa\"\n    },\n    {\n        \"code\": 61937,\n        \"tags\": \"cc-mastercard\"\n    },\n    {\n        \"code\": 61938,\n        \"tags\": \"cc-discover\"\n    },\n    {\n        \"code\": 61939,\n        \"tags\": \"cc-amex\"\n    },\n    {\n        \"code\": 61940,\n        \"tags\": \"cc-paypal\"\n    },\n    {\n        \"code\": 61941,\n        \"tags\": \"cc-stripe\"\n    },\n    {\n        \"code\": 61942,\n        \"tags\": \"bell-slash\"\n    },\n    {\n        \"code\": 61943,\n        \"tags\": \"bell-slash-o\"\n    },\n    {\n        \"code\": 61944,\n        \"tags\": \"trash\"\n    },\n    {\n        \"code\": 61945,\n        \"tags\": \"copyright\"\n    },\n    {\n        \"code\": 61946,\n        \"tags\": \"at\"\n    },\n    {\n        \"code\": 61947,\n        \"tags\": \"eyedropper\"\n    },\n    {\n        \"code\": 61948,\n        \"tags\": \"paint-brush\"\n    },\n    {\n        \"code\": 61949,\n        \"tags\": \"birthday-cake\"\n    },\n    {\n        \"code\": 61950,\n        \"tags\": \"area-chart\"\n    },\n    {\n        \"code\": 61952,\n        \"tags\": \"pie-chart\"\n    },\n    {\n        \"code\": 61953,\n        \"tags\": \"line-chart\"\n    },\n    {\n        \"code\": 61954,\n        \"tags\": \"lastfm\"\n    },\n    {\n        \"code\": 61955,\n        \"tags\": \"lastfm-square\"\n    },\n    {\n        \"code\": 61956,\n        \"tags\": \"toggle-off\"\n    },\n    {\n        \"code\": 61957,\n        \"tags\": \"toggle-on\"\n    },\n    {\n        \"code\": 61958,\n        \"tags\": \"bicycle\"\n    },\n    {\n        \"code\": 61959,\n        \"tags\": \"bus\"\n    },\n    {\n        \"code\": 61960,\n        \"tags\": \"ioxhost\"\n    },\n    {\n        \"code\": 61961,\n        \"tags\": \"angellist\"\n    },\n    {\n        \"code\": 61962,\n        \"tags\": \"cc\"\n    },\n    {\n        \"code\": 61963,\n        \"tags\": \"ils, shekel, sheqel\"\n    },\n    {\n        \"code\": 61964,\n        \"tags\": \"meanpath\"\n    },\n    {\n        \"code\": 61965,\n        \"tags\": \"buysellads\"\n    },\n    {\n        \"code\": 61966,\n        \"tags\": \"connectdevelop\"\n    },\n    {\n        \"code\": 61968,\n        \"tags\": \"dashcube\"\n    },\n    {\n        \"code\": 61969,\n        \"tags\": \"forumbee\"\n    },\n    {\n        \"code\": 61970,\n        \"tags\": \"leanpub\"\n    },\n    {\n        \"code\": 61971,\n        \"tags\": \"sellsy\"\n    },\n    {\n        \"code\": 61972,\n        \"tags\": \"shirtsinbulk\"\n    },\n    {\n        \"code\": 61973,\n        \"tags\": \"simplybuilt\"\n    },\n    {\n        \"code\": 61974,\n        \"tags\": \"skyatlas\"\n    },\n    {\n        \"code\": 61975,\n        \"tags\": \"cart-plus\"\n    },\n    {\n        \"code\": 61976,\n        \"tags\": \"cart-arrow-down\"\n    },\n    {\n        \"code\": 61977,\n        \"tags\": \"diamond\"\n    },\n    {\n        \"code\": 61978,\n        \"tags\": \"ship\"\n    },\n    {\n        \"code\": 61979,\n        \"tags\": \"user-secret\"\n    },\n    {\n        \"code\": 61980,\n        \"tags\": \"motorcycle\"\n    },\n    {\n        \"code\": 61981,\n        \"tags\": \"street-view\"\n    },\n    {\n        \"code\": 61982,\n        \"tags\": \"heartbeat\"\n    },\n    {\n        \"code\": 61985,\n        \"tags\": \"venus\"\n    },\n    {\n        \"code\": 61986,\n        \"tags\": \"mars\"\n    },\n    {\n        \"code\": 61987,\n        \"tags\": \"mercury\"\n    },\n    {\n        \"code\": 61988,\n        \"tags\": \"intersex, transgender\"\n    },\n    {\n        \"code\": 61989,\n        \"tags\": \"transgender-alt\"\n    },\n    {\n        \"code\": 61990,\n        \"tags\": \"venus-double\"\n    },\n    {\n        \"code\": 61991,\n        \"tags\": \"mars-double\"\n    },\n    {\n        \"code\": 61992,\n        \"tags\": \"venus-mars\"\n    },\n    {\n        \"code\": 61993,\n        \"tags\": \"mars-stroke\"\n    },\n    {\n        \"code\": 61994,\n        \"tags\": \"mars-stroke-v\"\n    },\n    {\n        \"code\": 61995,\n        \"tags\": \"mars-stroke-h\"\n    },\n    {\n        \"code\": 61996,\n        \"tags\": \"neuter\"\n    },\n    {\n        \"code\": 61997,\n        \"tags\": \"genderless\"\n    },\n    {\n        \"code\": 62000,\n        \"tags\": \"facebook-official\"\n    },\n    {\n        \"code\": 62001,\n        \"tags\": \"pinterest-p\"\n    },\n    {\n        \"code\": 62002,\n        \"tags\": \"whatsapp\"\n    },\n    {\n        \"code\": 62003,\n        \"tags\": \"server\"\n    },\n    {\n        \"code\": 62004,\n        \"tags\": \"user-plus\"\n    },\n    {\n        \"code\": 62005,\n        \"tags\": \"user-times\"\n    },\n    {\n        \"code\": 62006,\n        \"tags\": \"bed, hotel\"\n    },\n    {\n        \"code\": 62007,\n        \"tags\": \"viacoin\"\n    },\n    {\n        \"code\": 62008,\n        \"tags\": \"train\"\n    },\n    {\n        \"code\": 62009,\n        \"tags\": \"subway\"\n    },\n    {\n        \"code\": 62010,\n        \"tags\": \"medium\"\n    },\n    {\n        \"code\": 62011,\n        \"tags\": \"y-combinator, yc\"\n    },\n    {\n        \"code\": 62012,\n        \"tags\": \"optin-monster\"\n    },\n    {\n        \"code\": 62013,\n        \"tags\": \"opencart\"\n    },\n    {\n        \"code\": 62014,\n        \"tags\": \"expeditedssl\"\n    },\n    {\n        \"code\": 62016,\n        \"tags\": \"battery, battery-4, battery-full\"\n    },\n    {\n        \"code\": 62017,\n        \"tags\": \"battery-3, battery-three-quarters\"\n    },\n    {\n        \"code\": 62018,\n        \"tags\": \"battery-2, battery-half\"\n    },\n    {\n        \"code\": 62019,\n        \"tags\": \"battery-1, battery-quarter\"\n    },\n    {\n        \"code\": 62020,\n        \"tags\": \"battery-0, battery-empty\"\n    },\n    {\n        \"code\": 62021,\n        \"tags\": \"mouse-pointer\"\n    },\n    {\n        \"code\": 62022,\n        \"tags\": \"i-cursor\"\n    },\n    {\n        \"code\": 62023,\n        \"tags\": \"object-group\"\n    },\n    {\n        \"code\": 62024,\n        \"tags\": \"object-ungroup\"\n    },\n    {\n        \"code\": 62025,\n        \"tags\": \"sticky-note\"\n    },\n    {\n        \"code\": 62026,\n        \"tags\": \"sticky-note-o\"\n    },\n    {\n        \"code\": 62027,\n        \"tags\": \"cc-jcb\"\n    },\n    {\n        \"code\": 62028,\n        \"tags\": \"cc-diners-club\"\n    },\n    {\n        \"code\": 62029,\n        \"tags\": \"clone\"\n    },\n    {\n        \"code\": 62030,\n        \"tags\": \"balance-scale\"\n    },\n    {\n        \"code\": 62032,\n        \"tags\": \"hourglass-o\"\n    },\n    {\n        \"code\": 62033,\n        \"tags\": \"hourglass-1, hourglass-start\"\n    },\n    {\n        \"code\": 62034,\n        \"tags\": \"hourglass-2, hourglass-half\"\n    },\n    {\n        \"code\": 62035,\n        \"tags\": \"hourglass-3, hourglass-end\"\n    },\n    {\n        \"code\": 62036,\n        \"tags\": \"hourglass\"\n    },\n    {\n        \"code\": 62037,\n        \"tags\": \"hand-grab-o, hand-rock-o\"\n    },\n    {\n        \"code\": 62038,\n        \"tags\": \"hand-paper-o, hand-stop-o\"\n    },\n    {\n        \"code\": 62039,\n        \"tags\": \"hand-scissors-o\"\n    },\n    {\n        \"code\": 62040,\n        \"tags\": \"hand-lizard-o\"\n    },\n    {\n        \"code\": 62041,\n        \"tags\": \"hand-spock-o\"\n    },\n    {\n        \"code\": 62042,\n        \"tags\": \"hand-pointer-o\"\n    },\n    {\n        \"code\": 62043,\n        \"tags\": \"hand-peace-o\"\n    },\n    {\n        \"code\": 62044,\n        \"tags\": \"trademark\"\n    },\n    {\n        \"code\": 62045,\n        \"tags\": \"registered\"\n    },\n    {\n        \"code\": 62046,\n        \"tags\": \"creative-commons\"\n    },\n    {\n        \"code\": 62048,\n        \"tags\": \"gg\"\n    },\n    {\n        \"code\": 62049,\n        \"tags\": \"gg-circle\"\n    },\n    {\n        \"code\": 62050,\n        \"tags\": \"tripadvisor\"\n    },\n    {\n        \"code\": 62051,\n        \"tags\": \"odnoklassniki\"\n    },\n    {\n        \"code\": 62052,\n        \"tags\": \"odnoklassniki-square\"\n    },\n    {\n        \"code\": 62053,\n        \"tags\": \"get-pocket\"\n    },\n    {\n        \"code\": 62054,\n        \"tags\": \"wikipedia-w\"\n    },\n    {\n        \"code\": 62055,\n        \"tags\": \"safari\"\n    },\n    {\n        \"code\": 62056,\n        \"tags\": \"chrome\"\n    },\n    {\n        \"code\": 62057,\n        \"tags\": \"firefox\"\n    },\n    {\n        \"code\": 62058,\n        \"tags\": \"opera\"\n    },\n    {\n        \"code\": 62059,\n        \"tags\": \"internet-explorer\"\n    },\n    {\n        \"code\": 62060,\n        \"tags\": \"television, tv\"\n    },\n    {\n        \"code\": 62061,\n        \"tags\": \"contao\"\n    },\n    {\n        \"code\": 62062,\n        \"tags\": \"500px\"\n    },\n    {\n        \"code\": 62064,\n        \"tags\": \"amazon\"\n    },\n    {\n        \"code\": 62065,\n        \"tags\": \"calendar-plus-o\"\n    },\n    {\n        \"code\": 62066,\n        \"tags\": \"calendar-minus-o\"\n    },\n    {\n        \"code\": 62067,\n        \"tags\": \"calendar-times-o\"\n    },\n    {\n        \"code\": 62068,\n        \"tags\": \"calendar-check-o\"\n    },\n    {\n        \"code\": 62069,\n        \"tags\": \"industry\"\n    },\n    {\n        \"code\": 62070,\n        \"tags\": \"map-pin\"\n    },\n    {\n        \"code\": 62071,\n        \"tags\": \"map-signs\"\n    },\n    {\n        \"code\": 62072,\n        \"tags\": \"map-o\"\n    },\n    {\n        \"code\": 62073,\n        \"tags\": \"map\"\n    },\n    {\n        \"code\": 62074,\n        \"tags\": \"commenting\"\n    },\n    {\n        \"code\": 62075,\n        \"tags\": \"commenting-o\"\n    },\n    {\n        \"code\": 62076,\n        \"tags\": \"houzz\"\n    },\n    {\n        \"code\": 62077,\n        \"tags\": \"vimeo\"\n    },\n    {\n        \"code\": 62078,\n        \"tags\": \"black-tie\"\n    },\n    {\n        \"code\": 62080,\n        \"tags\": \"fonticons\"\n    },\n    {\n        \"code\": 62081,\n        \"tags\": \"reddit-alien\"\n    },\n    {\n        \"code\": 62082,\n        \"tags\": \"edge\"\n    },\n    {\n        \"code\": 62083,\n        \"tags\": \"credit-card-alt\"\n    },\n    {\n        \"code\": 62084,\n        \"tags\": \"codiepie\"\n    },\n    {\n        \"code\": 62085,\n        \"tags\": \"modx\"\n    },\n    {\n        \"code\": 62086,\n        \"tags\": \"fort-awesome\"\n    },\n    {\n        \"code\": 62087,\n        \"tags\": \"usb\"\n    },\n    {\n        \"code\": 62088,\n        \"tags\": \"product-hunt\"\n    },\n    {\n        \"code\": 62089,\n        \"tags\": \"mixcloud\"\n    },\n    {\n        \"code\": 62090,\n        \"tags\": \"scribd\"\n    },\n    {\n        \"code\": 62091,\n        \"tags\": \"pause-circle\"\n    },\n    {\n        \"code\": 62092,\n        \"tags\": \"pause-circle-o\"\n    },\n    {\n        \"code\": 62093,\n        \"tags\": \"stop-circle\"\n    },\n    {\n        \"code\": 62094,\n        \"tags\": \"stop-circle-o\"\n    },\n    {\n        \"code\": 62096,\n        \"tags\": \"shopping-bag\"\n    },\n    {\n        \"code\": 62097,\n        \"tags\": \"shopping-basket\"\n    },\n    {\n        \"code\": 62098,\n        \"tags\": \"hashtag\"\n    },\n    {\n        \"code\": 62099,\n        \"tags\": \"bluetooth\"\n    },\n    {\n        \"code\": 62100,\n        \"tags\": \"bluetooth-b\"\n    },\n    {\n        \"code\": 62101,\n        \"tags\": \"percent\"\n    },\n    {\n        \"code\": 62102,\n        \"tags\": \"gitlab\"\n    },\n    {\n        \"code\": 62103,\n        \"tags\": \"wpbeginner\"\n    },\n    {\n        \"code\": 62104,\n        \"tags\": \"wpforms\"\n    },\n    {\n        \"code\": 62105,\n        \"tags\": \"envira\"\n    },\n    {\n        \"code\": 62106,\n        \"tags\": \"universal-access\"\n    },\n    {\n        \"code\": 62107,\n        \"tags\": \"wheelchair-alt\"\n    },\n    {\n        \"code\": 62108,\n        \"tags\": \"question-circle-o\"\n    },\n    {\n        \"code\": 62109,\n        \"tags\": \"blind\"\n    },\n    {\n        \"code\": 62110,\n        \"tags\": \"audio-description\"\n    },\n    {\n        \"code\": 62112,\n        \"tags\": \"volume-control-phone\"\n    },\n    {\n        \"code\": 62113,\n        \"tags\": \"braille\"\n    },\n    {\n        \"code\": 62114,\n        \"tags\": \"assistive-listening-systems\"\n    },\n    {\n        \"code\": 62115,\n        \"tags\": \"american-sign-language-interpreting, asl-interpreting\"\n    },\n    {\n        \"code\": 62116,\n        \"tags\": \"deaf, deafness, hard-of-hearing\"\n    },\n    {\n        \"code\": 62117,\n        \"tags\": \"glide\"\n    },\n    {\n        \"code\": 62118,\n        \"tags\": \"glide-g\"\n    },\n    {\n        \"code\": 62119,\n        \"tags\": \"sign-language, signing\"\n    },\n    {\n        \"code\": 62120,\n        \"tags\": \"low-vision\"\n    },\n    {\n        \"code\": 62121,\n        \"tags\": \"viadeo\"\n    },\n    {\n        \"code\": 62122,\n        \"tags\": \"viadeo-square\"\n    },\n    {\n        \"code\": 62123,\n        \"tags\": \"snapchat\"\n    },\n    {\n        \"code\": 62124,\n        \"tags\": \"snapchat-ghost\"\n    },\n    {\n        \"code\": 62125,\n        \"tags\": \"snapchat-square\"\n    },\n    {\n        \"code\": 62126,\n        \"tags\": \"pied-piper\"\n    },\n    {\n        \"code\": 62128,\n        \"tags\": \"first-order\"\n    },\n    {\n        \"code\": 62129,\n        \"tags\": \"yoast\"\n    },\n    {\n        \"code\": 62130,\n        \"tags\": \"themeisle\"\n    },\n    {\n        \"code\": 62131,\n        \"tags\": \"google-plus-circle, google-plus-official\"\n    },\n    {\n        \"code\": 62132,\n        \"tags\": \"fa, font-awesome\"\n    },\n    {\n        \"code\": 62133,\n        \"tags\": \"handshake-o\"\n    },\n    {\n        \"code\": 62134,\n        \"tags\": \"envelope-open\"\n    },\n    {\n        \"code\": 62135,\n        \"tags\": \"envelope-open-o\"\n    },\n    {\n        \"code\": 62136,\n        \"tags\": \"linode\"\n    },\n    {\n        \"code\": 62137,\n        \"tags\": \"address-book\"\n    },\n    {\n        \"code\": 62138,\n        \"tags\": \"address-book-o\"\n    },\n    {\n        \"code\": 62139,\n        \"tags\": \"address-card, vcard\"\n    },\n    {\n        \"code\": 62140,\n        \"tags\": \"address-card-o, vcard-o\"\n    },\n    {\n        \"code\": 62141,\n        \"tags\": \"user-circle\"\n    },\n    {\n        \"code\": 62142,\n        \"tags\": \"user-circle-o\"\n    },\n    {\n        \"code\": 62144,\n        \"tags\": \"user-o\"\n    },\n    {\n        \"code\": 62145,\n        \"tags\": \"id-badge\"\n    },\n    {\n        \"code\": 62146,\n        \"tags\": \"drivers-license, id-card\"\n    },\n    {\n        \"code\": 62147,\n        \"tags\": \"drivers-license-o, id-card-o\"\n    },\n    {\n        \"code\": 62148,\n        \"tags\": \"quora\"\n    },\n    {\n        \"code\": 62149,\n        \"tags\": \"free-code-camp\"\n    },\n    {\n        \"code\": 62150,\n        \"tags\": \"telegram\"\n    },\n    {\n        \"code\": 62151,\n        \"tags\": \"thermometer, thermometer-4, thermometer-full\"\n    },\n    {\n        \"code\": 62152,\n        \"tags\": \"thermometer-3, thermometer-three-quarters\"\n    },\n    {\n        \"code\": 62153,\n        \"tags\": \"thermometer-2, thermometer-half\"\n    },\n    {\n        \"code\": 62154,\n        \"tags\": \"thermometer-1, thermometer-quarter\"\n    },\n    {\n        \"code\": 62155,\n        \"tags\": \"thermometer-0, thermometer-empty\"\n    },\n    {\n        \"code\": 62156,\n        \"tags\": \"shower\"\n    },\n    {\n        \"code\": 62157,\n        \"tags\": \"bath, bathtub, s15\"\n    },\n    {\n        \"code\": 62158,\n        \"tags\": \"podcast\"\n    },\n    {\n        \"code\": 62160,\n        \"tags\": \"window-maximize\"\n    },\n    {\n        \"code\": 62161,\n        \"tags\": \"window-minimize\"\n    },\n    {\n        \"code\": 62162,\n        \"tags\": \"window-restore\"\n    },\n    {\n        \"code\": 62163,\n        \"tags\": \"times-rectangle, window-close\"\n    },\n    {\n        \"code\": 62164,\n        \"tags\": \"times-rectangle-o, window-close-o\"\n    },\n    {\n        \"code\": 62165,\n        \"tags\": \"bandcamp\"\n    },\n    {\n        \"code\": 62166,\n        \"tags\": \"grav\"\n    },\n    {\n        \"code\": 62167,\n        \"tags\": \"etsy\"\n    },\n    {\n        \"code\": 62168,\n        \"tags\": \"imdb\"\n    },\n    {\n        \"code\": 62169,\n        \"tags\": \"ravelry\"\n    },\n    {\n        \"code\": 62170,\n        \"tags\": \"eercast\"\n    },\n    {\n        \"code\": 62171,\n        \"tags\": \"microchip\"\n    },\n    {\n        \"code\": 62172,\n        \"tags\": \"snowflake-o\"\n    },\n    {\n        \"code\": 62173,\n        \"tags\": \"superpowers\"\n    },\n    {\n        \"code\": 62174,\n        \"tags\": \"wpexplorer\"\n    },\n    {\n        \"code\": 62176,\n        \"tags\": \"meetup\"\n    }\n]"
}
