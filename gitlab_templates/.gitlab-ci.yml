default:
  image: drupalci/php-8.1-apache:production

variables:
  # If you want to completely replace the list of packages ORCA installs in
  # fixtures and runs tests on, you can specify your own packages file at
  # runtime by uncommenting the following line. Acceptable values are any
  # valid path to a YAML file relative to ORCA itself, e.g.,
  # ../example/tests/packages.yml.
  #
  # @see https://github.com/acquia/orca/blob/develop/config/packages.yml
  #
  # ORCA_PACKAGES_CONFIG: example/tests/packages.yml
  # If your package isn't in in ORCA's packages.yml or conflicts with details
  # that are, you can modify the active packages configuration at runtime by
  # uncommenting the following line and specifying your own alter file.
  # @see https://github.com/acquia/orca/blob/master/docs/advanced-usage.md#ORCA_PACKAGES_CONFIG_ALTER
  # @todo remove, or point to your own to register your pacakge.
  # ORCA_PACKAGES_CONFIG_ALTER: example/tests/packages_alter.yml
  # If your package is a Drupal installation profile, uncomment the following
  # line and specify its machine name.
  # @see https://github.com/acquia/orca/blob/master/docs/advanced-usage.md#ORCA_FIXTURE_PROFILE
  # ORCA_FIXTURE_PROFILE=example
  #
  # If your package is a Composer project template or requires a different
  # one to test with, uncomment the following line and specify its Packagist
  # name. This is recommended if your package is not meant to support Acquia
  # CMS, which is included in acquia/drupal-recommended-project.
  # @see https://github.com/acquia/orca/blob/main/docs/advanced-usage.md#ORCA_FIXTURE_PROJECT_TEMPLATE
  # @see https://github.com/acquia/orca/blob/main/docs/faq.md#why-do-i-get-version-conflicts-with-drupalacquia_cms
  # ORCA_FIXTURE_PROJECT_TEMPLATE=acquia/drupal-minimal-project
  #
  # Change the PHP Code Sniffer standard used for static analysis. Acceptable
  # values are "AcquiaPHP", "AcquiaDrupalStrict", and
  # "AcquiaDrupalTransitional". Defaults to "AcquiaDrupalTransitional".
  # @see https://github.com/acquia/orca/blob/main/docs/advanced-usage.md#ORCA_PHPCS_STANDARD
  # ORCA_PHPCS_STANDARD=AcquiaDrupalTransitional
  #
  # Enable Nightwatch.js testing. Acceptable values are "TRUE" and "FALSE".
  # ORCA_ENABLE_NIGHTWATCH=TRUE
  #
  # Enable code covearge reporting. Acceptable values are "TRUE" and "FALSE".
  # ORCA_COVERAGE_ENABLE=TRUE
  # Specify SUT DIR (need not be changed)
  ORCA_SUT_DIR: $CI_PROJECT_DIR
  # Specify JUNIT log file path for tests results to show up in Tests tab (need not be changed).
  ORCA_JUNIT_LOG: $CI_PROJECT_DIR/var/logs/junit.xml
  # CPU allocation for containers.
  # Projects with complex tests are welcome to increase this.
  # Keeping this low helps jobs find an available runner without waiting.
  KUBERNETES_CPU_REQUEST: 2
  # # Adding extra CPU to run containers hosting chrome and chromedriver.
  # SERVICE_CPU_REQUEST: 2
  # Google env variables.
  # ORCA_GOOGLE_API_CLIENT_ID: ${{ secrets.ORCA_GOOGLE_API_CLIENT_ID }}
  # ORCA_GOOGLE_API_CLIENT_SECRET: ${{ secrets.ORCA_GOOGLE_API_CLIENT_SECRET }}
  # ORCA_GOOGLE_API_REFRESH_TOKEN: ${{ secrets.ORCA_GOOGLE_API_REFRESH_TOKEN }}

.with-chrome: &with-chrome
  name: drupalci/chromedriver:production
  alias: chrome-orca
  entrypoint:
    - chromedriver
    - "--no-sandbox"
    - "--log-path=/tmp/chromedriver.log"
    - "--verbose"
    - "--whitelisted-ips="

.orca_run_tests:
  stage: test
  services:
    - <<: *with-chrome
  script:
    - apt update && apt upgrade -y
    # Installing missing packages.
    - apt-get update && apt-get install -y apt-utils libsodium-dev patch unzip
    # Installing sodiun extension required by ACMS.
    - docker-php-ext-install sodium
    - composer create-project --no-dev --ignore-platform-req=php acquia/orca ../orca $ORCA_VERSION
    # We are overriding the allowed failures features, So as to expose all failing jobs.
    # This is essential for the ORCA Testing repo.
    - echo 'export ORCA_IS_ALLOWED_FAILURE="FALSE"' >> ../orca/bin/ci/_includes.sh
    - |
      # We need to have dev-dependencies like phan/phan in STATIC_CODE_ANALYSIS job.
      if [[ "$ORCA_JOB" == "STATIC_CODE_ANALYSIS" ]]; then
        composer -d"../orca" install
      fi
    - |
      if [ "$ORCA_COVERAGE_COBERTURA_ENABLE" = "TRUE" ]; then
        pecl install xdebug
        docker-php-ext-enable xdebug
        echo xdebug.mode=coverage > /usr/local/etc/php/conf.d/xdebug.ini
      fi
    - cd $CI_PROJECT_DIR
    - ../orca/bin/ci/before_install.sh
    - ../orca/bin/ci/install.sh
    - |
      source ../orca/bin/ci/_includes.sh
      if [[ -d "${ORCA_FIXTURE_DIR}" ]]; then
        cd ${ORCA_FIXTURE_DIR}
        # We are using composer-plugin mnsami/composer-custom-directory-installer,
        # which by default loads libraries in vendor folder but we are expecting
        # them to be in libraries folder hence running below command.
        composer config --json extra.installer-paths.'docroot/libraries/{$name}' '["swagger-api/swagger-ui","nnnick/chartjs"]' --merge
        composer install && composer update -W

        # Below added to add swagger/chart.js libraries in CI.
        # Without this CI is failing.
        # @todo remove below workaround to add proper fix.
        mkdir ${ORCA_FIXTURE_DIR}/docroot/libraries
        curl "https://codeload.github.com/swagger-api/swagger-ui/zip/refs/tags/v3.0.17" -o ${ORCA_FIXTURE_DIR}/docroot/libraries/v3.0.17.zip
        unzip ${ORCA_FIXTURE_DIR}/docroot/libraries/v3.0.17.zip
        mv swagger-ui-3.0.17 ${ORCA_FIXTURE_DIR}/docroot/libraries/swagger-ui

        # Add slide-element library locally
        mkdir -p ${ORCA_FIXTURE_DIR}/docroot/libraries/slide-element
        curl "https://unpkg.com/slide-element@2.3.1/dist/index.umd.js" -o ${ORCA_FIXTURE_DIR}/docroot/libraries/slide-element/index.umd.js

        # Add chartjs library locally
        mkdir -p ${ORCA_FIXTURE_DIR}/docroot/libraries/chartjs/dist/
        curl "https://cdn.jsdelivr.net/npm/chart.js@4.2.0/dist/chart.umd.min.js" -o ${ORCA_FIXTURE_DIR}/docroot/libraries/chartjs/dist/chart.min.js
      fi
    - ../orca/bin/ci/script.sh
  after_script:
    - ../orca/bin/ci/after_success.sh
    - ../orca/bin/ci/after_failure.sh
    - ../orca/bin/ci/after_script.sh
  artifacts:
    expire_in: 6 mos
    when: always
    reports:
      junit: $CI_PROJECT_DIR/var/logs/junit.xml
    paths:
      - $CI_PROJECT_DIR/var/logs/junit.xml

# PHP 8.0 tests.
INTEGRATED_TEST_ON_LATEST_EOL_MAJOR_PHP8:
  image: drupalci/php-8.0-apache:production
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "INTEGRATED_TEST_ON_LATEST_EOL_MAJOR"
    ORCA_VERSION: ^3

# PHP 8.1 tests.
STATIC_CODE_ANALYSIS:
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "STATIC_CODE_ANALYSIS"

INTEGRATED_TEST_ON_LATEST_EOL_MAJOR:
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "INTEGRATED_TEST_ON_LATEST_EOL_MAJOR"

INTEGRATED_TEST_ON_OLDEST_SUPPORTED:
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "INTEGRATED_TEST_ON_OLDEST_SUPPORTED"

INTEGRATED_TEST_ON_PREVIOUS_MINOR:
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "INTEGRATED_TEST_ON_PREVIOUS_MINOR"

ISOLATED_TEST_ON_CURRENT:
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "ISOLATED_TEST_ON_CURRENT"

ISOLATED_TEST_ON_CURRENT_DEV:
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "ISOLATED_TEST_ON_CURRENT_DEV"

INTEGRATED_TEST_ON_CURRENT:
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "INTEGRATED_TEST_ON_CURRENT"

INTEGRATED_TEST_ON_CURRENT_DEV:
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "INTEGRATED_TEST_ON_CURRENT_DEV"

ISOLATED_TEST_ON_NEXT_MINOR:
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "ISOLATED_TEST_ON_NEXT_MINOR"

ISOLATED_TEST_ON_NEXT_MINOR_DEV:
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "ISOLATED_TEST_ON_NEXT_MINOR_DEV"

INTEGRATED_TEST_ON_NEXT_MINOR:
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "INTEGRATED_TEST_ON_NEXT_MINOR"

INTEGRATED_TEST_ON_NEXT_MINOR_DEV:
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "INTEGRATED_TEST_ON_NEXT_MINOR_DEV"

LOOSE_DEPRECATED_CODE_SCAN:
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "LOOSE_DEPRECATED_CODE_SCAN"

# PHP 8.3 tests.
STATIC_CODE_ANALYSIS_PHP83:
  image: drupalci/php-8.3-apache:production-old
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "STATIC_CODE_ANALYSIS"

ISOLATED_TEST_ON_CURRENT_PHP83:
  image: drupalci/php-8.3-apache:production-old
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "ISOLATED_TEST_ON_CURRENT"

ISOLATED_TEST_ON_CURRENT_DEV_PHP83:
  image: drupalci/php-8.3-apache:production-old
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "ISOLATED_TEST_ON_CURRENT_DEV"

INTEGRATED_TEST_ON_CURRENT_PHP83:
  image: drupalci/php-8.3-apache:production-old
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "INTEGRATED_TEST_ON_CURRENT"

INTEGRATED_TEST_ON_CURRENT_DEV_PHP83:
  image: drupalci/php-8.3-apache:production-old
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "INTEGRATED_TEST_ON_CURRENT_DEV"

ISOLATED_TEST_ON_NEXT_MINOR_PHP83:
  image: drupalci/php-8.3-apache:production-old
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "ISOLATED_TEST_ON_NEXT_MINOR"

ISOLATED_TEST_ON_NEXT_MINOR_DEV_PHP83:
  image: drupalci/php-8.3-apache:production-old
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "ISOLATED_TEST_ON_NEXT_MINOR_DEV"

INTEGRATED_TEST_ON_NEXT_MINOR_PHP83:
  image: drupalci/php-8.3-apache:production-old
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "INTEGRATED_TEST_ON_NEXT_MINOR"

INTEGRATED_TEST_ON_NEXT_MINOR_DEV_PHP83:
  image: drupalci/php-8.3-apache:production-old
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "INTEGRATED_TEST_ON_NEXT_MINOR_DEV"

DEPRECATED_CODE_SCAN_W_CONTRIB_PHP83:
  image: drupalci/php-8.3-apache:production-old
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "DEPRECATED_CODE_SCAN_W_CONTRIB"

LOOSE_DEPRECATED_CODE_SCAN_PHP83:
  image: drupalci/php-8.3-apache:production-old
  extends:
    - .orca_run_tests
  variables:
    ORCA_JOB: "LOOSE_DEPRECATED_CODE_SCAN"
