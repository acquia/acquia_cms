<?php

/**
 * @file
 * Install, update and uninstall functions for the acquia_cms_place module.
 */

use Drupal\user\RoleInterface;

/**
 * Implements hook_content_model_role_presave_alter().
 */
function acquia_cms_place_content_model_role_presave_alter(RoleInterface &$role) {
  switch ($role->id()) {
    case 'content_author':
      foreach ([
        'create place content',
        'edit own place content',
        'delete own place content',
      ] as $permission) {
        $role->grantPermission($permission);
      }
      break;

    case 'content_editor':
      foreach (['edit any place content', 'delete any place content'] as $permission) {
        $role->grantPermission($permission);
      }
      break;
  }
}

/**
 * Implements hook_module_preinstall().
 */
function acquia_cms_place_module_preinstall($module) {
  //\Drupal::service('acquia_cms_common.utility')->setModulePreinstallTriggered($module);
}

/**
 * Implements hook_update_N().
 *
 * Update node type conditions from node_type to entity_bundle.
 */
function acquia_cms_place_update_8001() {
  // Load all pattern configuration entities.
  $pattern_config = \Drupal::configFactory()->getEditable('pathauto.pattern.place_path');

  // Loop patterns and swap the node_type plugin by the entity_bundle:node
  // plugin.
  if ($pattern_config->get('type') === 'canonical_entities:node') {
    $selection_criteria = $pattern_config->get('selection_criteria');
    foreach ($selection_criteria as $uuid => $condition) {
      if ($condition['id'] === 'node_type') {
        $pattern_config->set("selection_criteria.$uuid.id", 'entity_bundle:node');
        $pattern_config->save();
        break;
      }
    }
  }
}

/**
 * Implements hook_update_N().
 *
 * Update Place display modes.
 */
function acquia_cms_place_update_8002() {
  // Load and update default view mode.
  $place_image_field = [
    'field_place_image' => [
      'type' => 'entity_reference_entity_view',
      'label' => 'hidden',
      'settings' => [
        'view_mode' => 'full',
        'link' => 'false',
      ],
      'third_party_settings' => [],
      'weight' => 0,
      'region' => 'content',
    ],
  ];
  $display_modes = [
    'default',
    'card',
    'horizontal_card',
    'search_results',
    'teaser',
  ];
  $view_modes = [
    'large_super_landscape',
    'small_landscape',
    'small_landscape',
    'teaser',
    'teaser',
  ];
  // Update Image field.
  foreach ($display_modes as $key => $display_mode) {
    $place_view_mode = \Drupal::configFactory()->getEditable('core.entity_view_display.node.place.' . $display_mode);
    if ($place_view_mode->get('hidden.field_place_image')) {
      $place_image_field['field_place_image']['settings']['view_mode'] = $view_modes[$key];
      $place_view_mode->set('content', array_merge($place_view_mode->get('content'), $place_image_field));
      if ($place_view_mode->get('content.body')) {
        $place_view_mode->set('content.body.weight', $place_view_mode->get('content.body.weight') + 1);
      }
      if ($place_view_mode->get('content.field_place_address')) {
        $place_view_mode->set('content.field_place_address.weight', $place_view_mode->get('content.field_place_address.weight') + 1);
      }
      if ($place_view_mode->get('content.field_place_telephone')) {
        $place_view_mode->set('content.field_place_telephone.weight', $place_view_mode->get('content.field_place_telephone.weight') + 1);
      }
      $place_view_mode->clear('hidden.field_place_image');
      $place_view_mode->save();
    }
  }

  // Add referenced image view mode.
  _acquia_cms_common_rewrite_configuration('core.entity_view_display.node.place.referenced_image', 'acquia_cms_place');

}

/**
 * Updates for scheduler option in Place content type.
 *
 * Implements hook_update_N().
 */
function acquia_cms_place_update_8003() {
  $formStorage = \Drupal::entityTypeManager()->getStorage('entity_form_display');
  $formDisplay = $formStorage->load('node.place.default');
  if ($formDisplay) {
    $formDisplay
      ->setComponent('publish_on', [
        'type' => 'datetime_timestamp_no_default',
        'region' => 'content',
        'weight' => 18,
        'settings' => [],
      ])
      ->setComponent('publish_state', [
        'type' => 'scheduler_moderation',
        'region' => 'content',
        'weight' => 15,
        'settings' => [],
      ])
      ->setComponent('scheduler_settings', [
        'region' => 'content',
        'weight' => 10,
        'settings' => [],
      ])
      ->setComponent('unpublish_on', [
        'type' => 'datetime_timestamp_no_default',
        'region' => 'content',
        'weight' => 17,
        'settings' => [],
      ])
      ->setComponent('unpublish_state', [
        'type' => 'scheduler_moderation',
        'region' => 'content',
        'weight' => 19,
        'settings' => [],
      ])
      ->save();
  }
}

/**
 * Added enforced dependency in site studio templates for Acquia CMS Place.
 *
 * Implements hook_update_N().
 */
function acquia_cms_place_update_8004() {
  $moduleHandler = \Drupal::service('module_handler');
  if ($moduleHandler->moduleExists('acquia_cms_site_studio')) {
    $module_path = \Drupal::service('extension.list.module')->getPath('acquia_cms_place');
    $directory = $module_path . '/config/pack_acquia_cms_place';
    if (is_dir($directory)) {
      $files = \Drupal::service('file_system')->scanDirectory($directory, '/.*\.yml$/');
      foreach ($files as $file) {
        $sitestudio_template = \Drupal::configFactory()->getEditable($file->name);
        if ($sitestudio_template && is_null($sitestudio_template->get('dependencies.enforced.module')) && $sitestudio_template->get('status')) {
          $sitestudio_template->set('dependencies.enforced.module', [
            'acquia_cms_place',
            'acquia_cms_site_studio',
          ]);
          $sitestudio_template->save(TRUE);
        }
      }
    }
  }
}

/**
 * Deletes the Site Studio configurations containing invalid data.
 *
 * Implements hook_update_N().
 */
function acquia_cms_place_update_8005() {
  $moduleHandler = \Drupal::service('module_handler');
  if ($moduleHandler->moduleExists('acquia_cms_site_studio')) {
    $module_path = \Drupal::service('extension.list.module')->getPath('acquia_cms_place');
    $directories = [
      $module_path . '/config/pack_acquia_cms_place',
      $module_path . '/config/pack_acquia_cms_place_search',
    ];
    foreach ($directories as $directory) {
      if (is_dir($directory)) {
        $files = \Drupal::service('file_system')->scanDirectory($directory, '/.*\.yml$/');
        foreach ($files as $file) {
          $sitestudio_template = \Drupal::configFactory()->getEditable($file->name);
          if ($sitestudio_template && !$sitestudio_template->isNew() && !$sitestudio_template->get("uuid") && !$sitestudio_template->get("id")) {
            $sitestudio_template->delete();
            \Drupal::logger("acquia_cms_place")->notice(
              sprintf("The configuration `%s` deleted containing invalid data.", $file->name)
            );
          }
        }
      }
    }
  }
}
