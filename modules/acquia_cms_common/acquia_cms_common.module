<?php

/**
 * @file
 * Contains hook implementations for common, shared Acquia CMS functionality.
 */

use Drupal\content_moderation\Plugin\WorkflowType\ContentModerationInterface;
use Drupal\node\NodeTypeInterface;
use Drupal\workflows\Entity\Workflow;

/**
 * Implements hook_ENTITY_TYPE_insert() for node types.
 *
 * Tries to add the new node type to a Content Moderation workflow specified
 * by the acquia_cms.workflow_id third-party setting. If the specified workflow
 * doesn't exist, or does exist but doesn't use Content Moderation, a warning
 * is logged.
 *
 * @param \Drupal\node\NodeTypeInterface $node_type
 *   The new node type.
 */
function acquia_cms_common_node_type_insert(NodeTypeInterface $node_type) {
  // If the node type does not specify a workflow, there's nothing to do.
  $workflow_id = $node_type->getThirdPartySetting('acquia_cms', 'workflow_id');
  if (empty($workflow_id)) {
    return;
  }

  $variables = [
    '%node_type' => $node_type->label(),
    '%workflow' => $workflow_id,
  ];
  $logger = Drupal::logger('acquia_cms');

  // Ensure the workflow exists, and log a warning if it doesn't.
  /** @var \Drupal\workflows\WorkflowInterface $workflow */
  $workflow = Workflow::load($workflow_id);
  if (empty($workflow)) {
    $logger->warning('Could not add the %node_type content type to the %workflow workflow because the workflow does not exist.', $variables);
  }
  else {
    $variables['%workflow'] = $workflow->label();
  }

  $type_plugin = $workflow->getTypePlugin();
  if ($type_plugin instanceof ContentModerationInterface) {
    $type_plugin->addEntityTypeAndBundle('node', $node_type->id());
    $workflow->save();
    $logger->info('Added the %node_type content type to the %workflow workflow.', $variables);
  }
  else {
    $logger->warning('Could not add the %node_type content type to the %workflow workflow because the workflow does not use Content Moderation.', $variables);
  }
}
