<?php

/**
 * @file
 * Install, update and uninstall functions for the acquia_cms_video module.
 */

use Drupal\acquia_cms_video\EntityOperations\PermissionManager;
use Drupal\editor\Entity\Editor;

/**
 * Implements hook_install().
 */
function acquia_cms_video_install($is_syncing) {
  if (!$is_syncing) {
    $class_resolver = \Drupal::service('class_resolver');
    $class_resolver->getInstanceFromDefinition(PermissionManager::class)
      ->grantPermissionToRoles();
    _acquia_cms_video_editor_config_rewrite();
  }
}

/**
 * Function to rewrite filtered_html & full_html configurations.
 */
function _acquia_cms_video_editor_config_rewrite(): void {
  if(!\Drupal::moduleHandler()->moduleExists('editor')) {
    return;
  }
  $editors = [
    "filtered_html",
    "full_html",
  ];
  foreach ($editors as $editor) {
    try {
      $editorObject = \Drupal::entityTypeManager()->getStorage('editor')->load($editor);
      if ($editorObject instanceof Editor) {
        $settings = $editorObject->getSettings();
        $items = &$settings["toolbar"]["items"];
        $plugins = &$settings['plugins'];
        if (!in_array('drupalMedia', $items)) {
          $items[] = 'drupalMedia';
        }
        if (!in_array('<drupal-media data-align data-caption title>', $plugins['ckeditor5_sourceEditing']['allowed_tags'])) {
          $plugins['ckeditor5_sourceEditing']['allowed_tags'][] = '<drupal-media data-align data-caption title>';
        }
        if ($plugins["media_media"]["allow_view_mode_override"] === FALSE) {
          $plugins["media_media"]["allow_view_mode_override"] = TRUE;
        }
        $editorObject->setSettings($settings)->save();
      }
    }
    catch (\Exception $e) {
      \Drupal::logger("acquia_cms_video_config_rewrite")->error($e->getMessage());
    }
  }
}

/**
 * Added enforced dependency in site studio templates for Acquia CMS Video.
 *
 * Implements hook_update_N().
 */
function acquia_cms_video_update_8001() {
  $moduleHandler = \Drupal::service('module_handler');
  if ($moduleHandler->moduleExists('acquia_cms_site_studio')) {
    $module_path = \Drupal::service('extension.list.module')->getPath('acquia_cms_video');
    $directory = $module_path . '/config/pack_acquia_cms_video';
    if (is_dir($directory)) {
      $files = \Drupal::service('file_system')->scanDirectory($directory, '/.*\.yml$/');
      foreach ($files as $file) {
        $sitestudio_template = \Drupal::configFactory()->getEditable($file->name);
        if ($sitestudio_template && is_null($sitestudio_template->get('dependencies.enforced.module')) && $sitestudio_template->get('status')) {
          $sitestudio_template->set('dependencies.enforced.module', [
            'acquia_cms_video',
            'acquia_cms_site_studio',
          ]);
          $sitestudio_template->save(TRUE);
        }
      }
    }
  }
}

/**
 * Deletes the Site Studio configurations containing invalid data.
 *
 * Implements hook_update_N().
 */
function acquia_cms_video_update_8002() {
  $moduleHandler = \Drupal::service('module_handler');
  if ($moduleHandler->moduleExists('acquia_cms_site_studio')) {
    $module_path = \Drupal::service('extension.list.module')->getPath('acquia_cms_video');
    $directories = [
      $module_path . '/config/pack_acquia_cms_video',
    ];
    foreach ($directories as $directory) {
      if (is_dir($directory)) {
        $files = \Drupal::service('file_system')->scanDirectory($directory, '/.*\.yml$/');
        foreach ($files as $file) {
          $sitestudio_template = \Drupal::configFactory()->getEditable($file->name);
          if ($sitestudio_template && !$sitestudio_template->isNew() && !$sitestudio_template->get("uuid") && !$sitestudio_template->get("id")) {
            $sitestudio_template->delete();
            \Drupal::logger("acquia_cms_video")->notice(
              sprintf("The configuration `%s` deleted containing invalid data.", $file->name)
            );
          }
        }
      }
    }
  }
}
