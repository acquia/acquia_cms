<?php

/**
 * @file
 * Install, update and uninstall functions for the acquia_cms_event module.
 */

use Drupal\acquia_cms_common\Facade\PermissionFacade;

/**
 * Implements hook_install().
 */
function acquia_cms_event_install() {
  $permissionFacade = Drupal::classResolver(PermissionFacade::class);
  $permissionFacade->createOrUpdateRole('content_author', [
    'permissions' => [
      'create event content',
      'edit own event content',
      'delete own event content',
    ],
  ]);
  $permissionFacade->createOrUpdateRole('content_editor', [
    'permissions' => [
      'edit any event content',
      'delete any event content',
    ],
  ]);
}

/**
 * Implements hook_module_preinstall().
 */
function acquia_cms_event_module_preinstall($module) {
  \Drupal::service('acquia_cms_common.utility')->setModulePreinstallTriggered($module);
}

/**
 * Update past events views display & its title.
 */
function acquia_cms_event_update_8001() {
  $configFactory = \Drupal::service('config.factory');
  $config = $configFactory->getEditable('views.view.event_cards');
  if (!empty($config)) {
    $config->set('display.past_events_block.display_title', 'Past Events')
      ->set('display.past_events_block.display_options.title', '')->save();
  }
}

/**
 * Implements hook_update_N().
 *
 * Update node type conditions from node_type to entity_bundle.
 */
function acquia_cms_event_update_8002() {
  // Load all pattern configuration entities.
  $pattern_config = \Drupal::configFactory()->getEditable('pathauto.pattern.event_path');

  // Loop patterns and swap the node_type plugin by the entity_bundle:node
  // plugin.
  if ($pattern_config->get('type') === 'canonical_entities:node') {
    $selection_criteria = $pattern_config->get('selection_criteria');
    foreach ($selection_criteria as $uuid => $condition) {
      if ($condition['id'] === 'node_type') {
        $pattern_config->set("selection_criteria.$uuid.id", 'entity_bundle:node');
        $pattern_config->save();
        break;
      }
    }
  }
}
