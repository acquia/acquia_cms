<?php

/**
 * @file
 * Contains installation and update hooks for Acquia CMS Starter.
 */

/**
 * Implements hook_requirements().
 */
function acquia_cms_starter_requirements(string $phase) : array {

  $requirements = [];

  if ($phase === 'install') {

    // Block install if the Google Maps API keys aren't set in the Geocoder
    // provider.
    $entity_type_manager = Drupal::entityTypeManager();
    if ($entity_type_manager->hasDefinition('geocoder_provider')) {
      /** @var \Drupal\geocoder\GeocoderProviderInterface $provider */
      $provider = $entity_type_manager->getStorage('geocoder_provider')
        ->load('googlemaps');

      if ($provider) {
        $configuration = $provider->get('configuration');
        if (empty($configuration['apiKey'])) {
          // If the install is via Drush, just assume the user knows what
          // they're doing and display a warning.
          if (PHP_SAPI === 'cli') {
            $requirements['acquia_cms_starter_google_maps_api_key'] = [
              'title' => t('Google Maps API Key is missing!'),
              'description' => t("The Google API key is not set, and you will see errors below. They're technically harmless, but the maps will not work. You can set the key later and resave your starter content to generate them."),
              'severity' => REQUIREMENT_WARNING,
            ];
          }
        }
      }
    }

    // Prevent installation if acquia_cms_site_studio is not install,
    // this will give error when default content get imported before
    // site studio install, so let warn user for the same.
    if (!\Drupal::moduleHandler()->moduleExists('acquia_cms_site_studio')) {
      $requirements['acquia_cms_starter_site_studio'] = [
        'title' => t('Module [acquia_cms_site_studio] is missing!'),
        'description' => t('Please install module [acquia_cms_site_studio] first.'),
        'severity' => REQUIREMENT_ERROR,
      ];
    }
  }

  return $requirements;
}

/**
 * Implements hook_install().
 */
function acquia_cms_starter_install() {
  \Drupal::service('module_installer')->install(['webform']);
  \Drupal::service('module_installer')->install(['webform_ui']);
}

/**
 * Implements hook_modules_installed().
 */
function acquia_cms_starter_modules_installed(array $modules) {
  // Moved the warning display for MAPS key from hook_requirements() above.
  // The intention behind doing this was to display the warning message,
  // on successful module installation.
  // The warning message is ignored on UI installation in hook_requirements
  // upon setting the severity level to REQUIRMENT_WARNING.
  // Check issue here -  https://www.drupal.org/project/drupal/issues/2295051
  $entity_type_manager = Drupal::entityTypeManager();
  if ($entity_type_manager->hasDefinition('geocoder_provider')) {
    /** @var \Drupal\geocoder\GeocoderProviderInterface $provider */
    $provider = $entity_type_manager->getStorage('geocoder_provider')
      ->load('googlemaps');

    if ($provider) {
      $configuration = $provider->get('configuration');
      if (empty($configuration['apiKey'])) {
        // Tweaked the message to be displayed on UI installation.
        // The module will be installed with warning messages.
        if (PHP_SAPI !== 'cli') {
          \Drupal::messenger()->addWarning(t('The Google API key is not set, and you will see warnings below. They are technically harmless, but the maps will not work. You can set the key later <a href="@url">here</a> and resave your starter content to generate them.', [
            '@url' => '/admin/tour/dashboard',
          ]));
        }
      }
    }
  }
}
