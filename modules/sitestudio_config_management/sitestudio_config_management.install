<?php

/**
 * @file
 * Install, update and uninstall functions for the site studio config module.
 */

/**
 * Implements hook_install().
 */
function sitestudio_config_management_install($is_syncing) {
  if (!$is_syncing) {
    // Get existing config ignore settings and append the new one.
    $config = \Drupal::configFactory()->getEditable('config_ignore.settings');
    $existing_ignore_config = $config->get('ignored_config_entities');
    $new_ignore_config = [
      'cohesion_*',
    ];
    $updated_ignore_config = array_unique(array_merge($existing_ignore_config, $new_ignore_config));
    $config->set('ignored_config_entities', $updated_ignore_config);
    $config->save(TRUE);

    $new_cohesion_sync_config = _sitestudio_config_management_get_configuration('cohesion.sync.settings', 'sitestudio_config_management');
    $active_cohesion_sync = \Drupal::configFactory()->getEditable('cohesion.sync.settings');
    if ($active_cohesion_sync->isNew()) {
      // The config cohesion.sync.settings is not getting imported even
      // when it's new and config is under optional directory.
      // Hence, we are importing programmatically.
      $active_cohesion_sync->setData($new_cohesion_sync_config);
    }
    else {
      // If configuration already exists, we need to ensure that we provide
      // enabled_entity_types provided by sitestudio_config_management module.
      $mergedData = array_merge($new_cohesion_sync_config['enabled_entity_types'], $active_cohesion_sync->get("enabled_entity_types"));
      $active_cohesion_sync->set('enabled_entity_types', $mergedData);
    }
    $active_cohesion_sync->save(TRUE);
  }
  /** @var \Drupal\sitestudio_config_management\SiteStudioConfigManagement $config_management_service */
  $config_management_service = \Drupal::service("site_studio.config_management");
  $config_management_service->initialize();
}

/**
 * Implements hook_uninstall().
 */
function sitestudio_config_management_uninstall() {
  /** @var \Drupal\sitestudio_config_management\SiteStudioConfigManagement $config_management_service */
  $config_management_service = \Drupal::service("site_studio.config_management");
  $config_management_service->clear();
}
