---
language: php

# The lowest version of PHP supported by all of Drupal, Acquia, and ORCA itself.
# @see https://www.drupal.org/docs/8/system-requirements/php-requirements
# @see https://docs.acquia.com/acquia-cloud/arch/tech-platform/
php: "7.4"

services:
  - mysql

addons:
  chrome: stable

cache:
  directories:
    - "$HOME/.composer/cache"
    - "$HOME/.drush/cache"
    - "${TMPDIR:-/tmp}/phpstan/cache"

env:
  # Change the following values for your implementation.
  global:
    # - COHESION_ARTIFACT=$TRAVIS_BUILD_DIR/tests/cohesion.tar.gz
    - ACMS_DB_ARTIFACT=$TRAVIS_BUILD_DIR/tests/acms.sql.gz
    - ACMS_FILES_ARTIFACT=$TRAVIS_BUILD_DIR/tests/acms-files.tar.gz
    - ACMS_STARTER_DB_ARTIFACT=$TRAVIS_BUILD_DIR/tests/acms-starter.sql.gz
    - ACMS_STARTER_FILES_ARTIFACT=$TRAVIS_BUILD_DIR/tests/acms-files-starter.tar.gz
    # By default, no PHPUnit test groups are excluded.
    - ACMS__JOB_EXCLUDE_PHPUNIT_TEST_GROUP=
    # Provide your package's name.
    - ORCA_SUT_NAME=acquia/acquia_cms
    # Specify the name of the nearest Git version branch, e.g., 1.x or 8.x-1.x.
    # This may be the destination branch of a pull request or the nearest
    # ancestor of a topic branch.
    - ORCA_SUT_BRANCH=develop
    # Specify the version of ORCA to use. Use dev-master to track the latest
    # release, dev-develop to track Dev/HEAD, or any other Composer version
    # string.
    # @see https://getcomposer.org/doc/articles/versions.md
    - ORCA_VERSION=^3
    # If your package isn't in in ORCA's packages.yml or conflicts with details
    # that are, you can modify the active packages configuration at runtime by
    # uncommenting the following line and specifying your own alter file.
    # @see https://github.com/acquia/orca/blob/master/docs/advanced-usage.md#ORCA_PACKAGES_CONFIG_ALTER
    - ORCA_PACKAGES_CONFIG_ALTER=../acquia_cms/tests/packages_alter.yml
    # If your package is a Drupal installation profile, uncomment the following
    # line and specify its machine name.
    # @see https://github.com/acquia/orca/blob/master/docs/advanced-usage.md#ORCA_FIXTURE_PROFILE
    - ORCA_FIXTURE_PROFILE=acquia_cms
    - ORCA_TELEMETRY_ENABLE=TRUE
    # Change the PHP Code Sniffer standard used for static analysis. Acceptable
    # values are "AcquiaPHP", "AcquiaDrupalStrict", and
    # "AcquiaDrupalTransitional". Defaults to "AcquiaDrupalTransitional".
    # @see https://github.com/acquia/orca/blob/master/docs/advanced-usage.md#ORCA_PHPCS_STANDARD
    - ORCA_PHPCS_STANDARD=AcquiaDrupalStrict

# Execution time is drastically reduced by splitting the build into multiple
# concurrent jobs.
matrix:
  # Mark the build as finished once the only remaining jobs are allowed to fail.
  fast_finish: true
  include:
    # The standard ORCA jobs provide broad out-of-the-box coverage.
    # @see https://github.com/acquia/orca/blob/master/docs/understanding-orca.md#continuous-integration
    - { env: ORCA_JOB=STATIC_CODE_ANALYSIS, name: "Static code analysis" }
    - { env: ORCA_JOB=STRICT_DEPRECATED_CODE_SCAN, name: "Strict deprecated code scan" }
    - { env: ORCA_JOB=INTEGRATED_TEST_ON_OLDEST_SUPPORTED, if: type = cron, name: "Integrated test on oldest supported Drupal core version" }
    - { env: ORCA_JOB=INTEGRATED_UPGRADE_TEST_FROM_PREVIOUS_MINOR, if: type = cron, name: "Integrated upgrade test from previous minor" }
    - { env: ORCA_JOB=ISOLATED_TEST_ON_CURRENT ACMS_JOB=base_full, if: type = cron, name: "Isolated test on current Drupal core version" }
    # To send PHPUnit test coverage data to Coveralls (coveralls.io), configure
    # your GitHub repository according to the FAQ below and uncomment the
    # following line. By default this job is allowed to fail (see below) so that
    # the total build can be marked finished sooner, because it will have the
    # same testing outcome as the above ISOLATED_TEST_ON_CURRENT but may take
    # significantly longer. Note: this setting implies ORCA_COVERAGE_ENABLE,
    # which need not be set separately.
    # @see https://github.com/acquia/orca/blob/main/docs/faq.md#coveralls
    # @see https://github.com/acquia/orca/blob/main/docs/advanced-usage.md#ORCA_COVERALLS_ENABLE
    # @see https://github.com/acquia/orca/blob/main/docs/advanced-usage.md#ORCA_COVERAGE_ENABLE
    # - { env: ORCA_JOB=ISOLATED_TEST_ON_CURRENT ORCA_COVERALLS_ENABLE=TRUE, name: "Isolated test on current Drupal core version with test coverage" }
    #
    # To generate test coverage data to send somewhere other than Coveralls, use
    # the ORCA_COVERAGE_ENABLE variable instead.
    # - { env: ORCA_JOB=ISOLATED_TEST_ON_CURRENT ORCA_COVERAGE_ENABLE=TRUE, name: "Isolated test on current Drupal core version with test coverage" }
    - { env: ORCA_JOB=INTEGRATED_TEST_ON_CURRENT, if: type = cron, name: "Integrated test on current Drupal core version" }
    - { env: ORCA_JOB=INTEGRATED_UPGRADE_TEST_TO_NEXT_MINOR, if: type = cron, name: "Integrated upgrade test to next minor Drupal core version" }
    - { env: ORCA_JOB=INTEGRATED_UPGRADE_TEST_TO_NEXT_MINOR_DEV, if: type = cron, name: "Integrated upgrade test to next minor dev Drupal core version" }
    - { env: ORCA_JOB=INTEGRATED_TEST_ON_CURRENT_DEV ACMS_JOB=base_full, if: type = cron, name: "Integrated test on current dev Drupal core version" }
    - { env: ORCA_JOB=LOOSE_DEPRECATED_CODE_SCAN, if: type = cron, name: "Loose deprecated code scan" }
    - { env: ORCA_JOB=STRICT_DEPRECATED_CODE_SCAN, if: type = cron, name: "Strict deprecated code scan" }
    - { env: ORCA_JOB=DEPRECATED_CODE_SCAN_W_CONTRIB, if: type = cron, name: "Deprecated code scan w/ contrib" }
    - { env: ORCA_JOB=ISOLATED_TEST_ON_NEXT_MINOR, if: type = cron, name: "Isolated test on next minor Drupal core version" }
    - { env: ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MINOR, if: type = cron, name: "Integrated test on next minor Drupal core version" }
    - { env: ORCA_JOB=ISOLATED_TEST_ON_NEXT_MINOR_DEV, if: type = cron, name: "Isolated test on next minor dev Drupal core version" }
    - { env: ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MINOR_DEV, if: type = cron, name: "Integrated test on next minor dev Drupal core version" }
    # The following nine jobs are custom ACMS jobs based on the standard isolated
    # current dev test.
    # Exclude push group tests on this job to exclude low and medium risk tests.
    - { name: "Isolated test on current dev Drupal core version", if: type = push, env: ACMS_JOB=base ACMS__JOB_EXCLUDE_PHPUNIT_TEST_GROUP="push" ORCA_JOB=ISOLATED_TEST_ON_CURRENT_DEV}
    - { name: "Starter", if: NOT branch = main, env: ACMS_JOB=starter ORCA_JOB=ISOLATED_TEST_ON_CURRENT_DEV}
    # Exclude pr group tests to exclude only low-risk tests during PR builds.
    - { name: "Isolated test on current dev Drupal core version - PR Tests", if: type = pull_request, env: ACMS_JOB=base ACMS__JOB_EXCLUDE_PHPUNIT_TEST_GROUP="pr" ORCA_JOB=ISOLATED_TEST_ON_CURRENT_DEV}
    # The following jobs run only during cron runs, and fully install the site before
    # running tests.
    - { name: "Isolated test on current dev Drupal core version - Full Install", if: type = cron, env: ACMS_JOB=base_full ORCA_JOB=ISOLATED_TEST_ON_CURRENT_DEV}
    - { name: "Starter - Full Install", if: NOT branch = main AND type = cron, env: ACMS_JOB=starter_full ORCA_JOB=ISOLATED_TEST_ON_CURRENT_DEV}
    # Acquia CMS is going to support both PHP 7.3 and PHP 7.4 until Acquia Cloud
    # officially stop support for PHP 7.3.
    # Run the following jobs on PHP 7.3 to make sure it works fine, during cron run.
    - { php: "7.3", name: "[PHP 7.3] - Isolated test on current dev Drupal core version - Full Install", if: type = cron, env: ACMS_JOB=base_full ORCA_JOB=ISOLATED_TEST_ON_CURRENT_DEV }
    - { php: "7.3", name: "[PHP 7.3] - Starter - Full Install", if: NOT branch = main AND type = cron, env: ACMS_JOB=starter_full ORCA_JOB=ISOLATED_TEST_ON_CURRENT_DEV }
    # Uncomment the following four lines to enable the corresponding tests once
    # the next major version of Drupal core has an alpha release or earlier.
    # Until then it's wasteful to use CI jobs on them, even if they exit early.
    # - { env: ORCA_JOB=ISOLATED_TEST_ON_NEXT_MAJOR_LATEST_MINOR_BETA_OR_LATER, name: "Isolated test on next major, latest minor beta-or-later Drupal core version" }
    # - { env: ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MAJOR_LATEST_MINOR_BETA_OR_LATER, name: "Integrated test on next major, latest minor beta-or-later Drupal core version" }
    # - { env: ORCA_JOB=ISOLATED_TEST_ON_NEXT_MAJOR_LATEST_MINOR_DEV, name: "Isolated test on next major, latest minor dev Drupal core version" }
    # - { env: ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MAJOR_LATEST_MINOR_DEV, name: "Integrated test on next major, latest minor dev Drupal core version" }
    - { env: ORCA_JOB=ISOLATED_UPGRADE_TEST_TO_NEXT_MAJOR_DEV, if: type = cron, name: "Isolated upgrade test to next major dev Drupal core version" }
    - { env: ORCA_JOB=LOOSE_DEPRECATED_CODE_SCAN, if: type = cron, name: "Loose deprecated code scan" }
    - { env: ORCA_JOB=DEPRECATED_CODE_SCAN_W_CONTRIB, if: type = cron, name: "Deprecated code scan w/ contrib" }

    # For various reasons, some jobs are allowed to fail without failing the whole
    # build. They should still be watched for advance notice of future problems.
    # @see https://docs.travis-ci.com/user/customizing-the-build#rows-that-are-allowed-to-fail
  allow_failures:
    - env: ORCA_JOB=INTEGRATED_UPGRADE_TEST_TO_NEXT_MINOR_DEV
    - env: ORCA_JOB=LOOSE_DEPRECATED_CODE_SCAN
    - env: ORCA_JOB=DEPRECATED_CODE_SCAN_W_CONTRIB
    - env: ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MINOR
    - env: ORCA_JOB=INTEGRATED_TEST_ON_CURRENT
    - env: ORCA_JOB=ISOLATED_TEST_ON_NEXT_MINOR_DEV
    - env: ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MINOR_DEV
    - env: ORCA_JOB=ISOLATED_TEST_ON_NEXT_MAJOR_LATEST_MINOR_DEV
    - env: ORCA_JOB=INTEGRATED_TEST_ON_NEXT_MAJOR_LATEST_MINOR_DEV
    - env: ORCA_JOB=ISOLATED_UPGRADE_TEST_TO_NEXT_MAJOR_DEV

dist: bionic

# Install ORCA and prepare the environment.
before_install:
  - sudo echo "deb http://archive.ubuntu.com/ubuntu focal main restricted universe multiverse" >> /etc/apt/sources.list
  - sudo apt-get update
  - sudo apt-get -y install sqlite3/focal
  - mysql -u root < ./tests/travis/install.sql
  - composer create-project --no-dev acquia/orca ../orca "$ORCA_VERSION"
  - composer self-update
  # Optionally, remove SUT-provided tests with a specific PHPUnit test group.
  - if [ ! -z $ACMS__JOB_EXCLUDE_PHPUNIT_TEST_GROUP ]; then find ./ -type f | xargs grep -l "@group $ACMS__JOB_EXCLUDE_PHPUNIT_TEST_GROUP$" | xargs rm -v; fi
  - ../orca/bin/travis/before_install.sh

# Create the test fixture and place the SUT.
install: ./tests/travis/install.sh

# Display details about the fixture.
before_script: ../orca/bin/travis/before_script.sh

# Run the test script.
script: ./tests/travis/script.sh

# Reserved for future use.
before_cache: ../orca/bin/travis/before_cache.sh

# Reserved for future use.
after_success: ../orca/bin/travis/after_success.sh

# Display debugging information in case of failure.
after_failure: ../orca/bin/travis/after_failure.sh

# Reserved for future use.
after_script: ../orca/bin/travis/after_script.sh

notifications:
  slack:
    rooms:
      - secure: P7RpwdM8JKMCs6386SOy24nsh7jBYaZ/CLzKH1vRu1sVnAopRSlk98VoejGED4YzCq2V3+b84PNltjyOZlDdPutZMP2Fat4OU+e4Mt05Vlrbn470cjk0puzFBnuubAq2GwXcyAB6Eq9DEe6DARCdFSya6GsTjvf3+RVFIaiVDDG0PYYQrMlwQ/C/+JBmnP7FLfidL6vX2YDL6UbQpQGuqJ/hwliW2RVnMTM7gCpgNaY8rxRRBuKKPjzJt09hV+YNpvsnGab+t5DMWKzeNKWUl0wiVOWEv90CKyx9QIt4zJy8pAxXitDFz74z/cMZV/ELGaD20nl7hw88R3rTzK2V+5FRCZHcQvkCgiZbHayaF4ShquHZbzE8YH48sEORFaGnbfaY69sveLq4+74dpFdMHRj1cBRY1CGnN59JgtBTwZShlXbUZoYJGbebfBvlxt6A2IcSERiTGl0i64L1elAkN6854VPwWMDi+iLfgfJN/0jugsvAcCQi0DOV1DJzHdF+EbVhFAVFfivwHo3Ai7QSZN2Rs4ojE8sdWQOp83wjA493FATkCSvFcpyPqG9kX1nQuDf6SNHwVg4jdpePwp/okgm+WcCZPiCEE2jW4gu49Gx4m2Y3r2878b76cQn+K4DX/mP5vRu6vA50gAa1fMsL4Yo9v/VbtrbEPYEVmFUHdq0=
    on_success: change
    on_failure: always
    # Limit to cron builds.
    if: type = cron
