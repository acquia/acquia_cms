# This file is used by Acquia Pipelines continuous integration. Upon success, an
# artifact is deployed to the `orionacms` subscription on Acquia Cloud.
version: 1.3.0
services:
  - composer:
      version: 2
  - php:
      version: 8.1

events:
  build:
    steps:
      - setup:
          type: script
          script:
            # Commented below code for now as we are using fork repo, so composer validate is failing.
            #- composer validate --no-check-all --ansi --no-interaction
            - composer remove "drupal/upgrade_status" --no-update --no-install
            - composer remove "friendsoftwig/twigcs" "axelerant/drupal-quality-checker" "oomphinc/composer-installers-extender" "drupal/core-composer-scaffold" --dev --no-update --no-install
            - composer require "drupal/core-dev:^9 || ^10" --no-update --no-install --dev
            - composer require "acquia/acquia-cms-starterkit:dev-drupal10" "drupal/core:^10" "drupal/core-composer-scaffold:^9.0.0 || ^10" "oomphinc/composer-installers-extender:^1.1 || ^2" "composer/installers:^1.9" --no-update --no-install
            # This is needed only for Drupal 10 work as we are using fork repository.
            # Remove it once it's completed.
            - ./fork_repo.sh
            - composer update --no-dev
            - mkdir -p docroot/modules/acquia_cms
            - composer archive --format zip --file acquia_cms
            - unzip acquia_cms.zip -d docroot/modules/acquia_cms
      - front-end:
          type: script
          script:
            - cd docroot/themes/contrib/acquia_claro
            - npm install
            - npm run build
            - cd -
      - cleanup:
          type: script
          script:
            - rm acquia_cms.zip
            # Prepare settings.php with the minimum required for Cloud.
            - chmod -R +w docroot/sites/default
            - cp docroot/sites/default/default.settings.php docroot/sites/default/settings.php
            # Clear any config directories that Cloud tries to set in the include file.
            - echo "\$config_directories = [];" >> docroot/sites/default/settings.php
            # Use the existing `config` directory we already have. Cloud gets confused
            # because we already have a config directory above docroot and manipulating it
            # in Pipelines doesn't seem to work. This deployment is ephemeral, so using
            # the existing config directory isn't a problem.
            - echo "\$config_directories['sync'] = '../config';" >> docroot/sites/default/settings.php
